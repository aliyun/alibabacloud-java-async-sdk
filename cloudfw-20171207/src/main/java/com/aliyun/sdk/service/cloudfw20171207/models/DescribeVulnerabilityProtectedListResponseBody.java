// This file is auto-generated, don't edit it. Thanks.
package com.aliyun.sdk.service.cloudfw20171207.models;

import com.aliyun.core.annotation.*;
import darabonba.core.RequestModel;
import darabonba.core.TeaModel;
import com.aliyun.sdk.gateway.pop.models.*;

/**
 * {@link DescribeVulnerabilityProtectedListResponseBody} extends {@link TeaModel}
 *
 * <p>DescribeVulnerabilityProtectedListResponseBody</p>
 */
public class DescribeVulnerabilityProtectedListResponseBody extends TeaModel {
    @NameInMap("RequestId")
    private String requestId;

    @NameInMap("TotalCount")
    private Integer totalCount;

    @NameInMap("VulnList")
    private java.util.List < VulnList> vulnList;

    @NameInMap("ZeroResourceCount")
    private Integer zeroResourceCount;

    private DescribeVulnerabilityProtectedListResponseBody(Builder builder) {
        this.requestId = builder.requestId;
        this.totalCount = builder.totalCount;
        this.vulnList = builder.vulnList;
        this.zeroResourceCount = builder.zeroResourceCount;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static DescribeVulnerabilityProtectedListResponseBody create() {
        return builder().build();
    }

    /**
     * @return requestId
     */
    public String getRequestId() {
        return this.requestId;
    }

    /**
     * @return totalCount
     */
    public Integer getTotalCount() {
        return this.totalCount;
    }

    /**
     * @return vulnList
     */
    public java.util.List < VulnList> getVulnList() {
        return this.vulnList;
    }

    /**
     * @return zeroResourceCount
     */
    public Integer getZeroResourceCount() {
        return this.zeroResourceCount;
    }

    public static final class Builder {
        private String requestId; 
        private Integer totalCount; 
        private java.util.List < VulnList> vulnList; 
        private Integer zeroResourceCount; 

        /**
         * The ID of the request.
         */
        public Builder requestId(String requestId) {
            this.requestId = requestId;
            return this;
        }

        /**
         * The total number of vulnerabilities that are detected by Cloud Firewall.
         */
        public Builder totalCount(Integer totalCount) {
            this.totalCount = totalCount;
            return this;
        }

        /**
         * The vulnerabilities.
         */
        public Builder vulnList(java.util.List < VulnList> vulnList) {
            this.vulnList = vulnList;
            return this;
        }

        /**
         * The number of assets on which no vulnerabilities are detected.
         */
        public Builder zeroResourceCount(Integer zeroResourceCount) {
            this.zeroResourceCount = zeroResourceCount;
            return this;
        }

        public DescribeVulnerabilityProtectedListResponseBody build() {
            return new DescribeVulnerabilityProtectedListResponseBody(this);
        } 

    } 

    public static class ResourceList extends TeaModel {
        @NameInMap("Eip")
        private String eip;

        @NameInMap("InternetIp")
        private String internetIp;

        @NameInMap("IntranetIp")
        private String intranetIp;

        @NameInMap("RegionId")
        private String regionId;

        @NameInMap("ResourceId")
        private String resourceId;

        @NameInMap("ResourceName")
        private String resourceName;

        @NameInMap("ResourceType")
        private String resourceType;

        @NameInMap("VulnStatus")
        private String vulnStatus;

        private ResourceList(Builder builder) {
            this.eip = builder.eip;
            this.internetIp = builder.internetIp;
            this.intranetIp = builder.intranetIp;
            this.regionId = builder.regionId;
            this.resourceId = builder.resourceId;
            this.resourceName = builder.resourceName;
            this.resourceType = builder.resourceType;
            this.vulnStatus = builder.vulnStatus;
        }

        public static Builder builder() {
            return new Builder();
        }

        public static ResourceList create() {
            return builder().build();
        }

        /**
         * @return eip
         */
        public String getEip() {
            return this.eip;
        }

        /**
         * @return internetIp
         */
        public String getInternetIp() {
            return this.internetIp;
        }

        /**
         * @return intranetIp
         */
        public String getIntranetIp() {
            return this.intranetIp;
        }

        /**
         * @return regionId
         */
        public String getRegionId() {
            return this.regionId;
        }

        /**
         * @return resourceId
         */
        public String getResourceId() {
            return this.resourceId;
        }

        /**
         * @return resourceName
         */
        public String getResourceName() {
            return this.resourceName;
        }

        /**
         * @return resourceType
         */
        public String getResourceType() {
            return this.resourceType;
        }

        /**
         * @return vulnStatus
         */
        public String getVulnStatus() {
            return this.vulnStatus;
        }

        public static final class Builder {
            private String eip; 
            private String internetIp; 
            private String intranetIp; 
            private String regionId; 
            private String resourceId; 
            private String resourceName; 
            private String resourceType; 
            private String vulnStatus; 

            /**
             * The elastic IP address (EIP) that is associated with the instance.
             */
            public Builder eip(String eip) {
                this.eip = eip;
                return this;
            }

            /**
             * The public IP address of the instance.
             */
            public Builder internetIp(String internetIp) {
                this.internetIp = internetIp;
                return this;
            }

            /**
             * The private IP address of the instance.
             */
            public Builder intranetIp(String intranetIp) {
                this.intranetIp = intranetIp;
                return this;
            }

            /**
             * The region ID of your Cloud Firewall.
             * <p>
             * 
             * >  For more information about Cloud Firewall supported regions, see [Supported regions](~~195657~~).
             */
            public Builder regionId(String regionId) {
                this.regionId = regionId;
                return this;
            }

            /**
             * The ID of the instance.
             */
            public Builder resourceId(String resourceId) {
                this.resourceId = resourceId;
                return this;
            }

            /**
             * The name of the instance.
             */
            public Builder resourceName(String resourceName) {
                this.resourceName = resourceName;
                return this;
            }

            /**
             * The type of the asset. Valid values:
             * <p>
             * 
             * *   **SLB**
             * *   **EIP**
             * *   **ECS**
             */
            public Builder resourceType(String resourceType) {
                this.resourceType = resourceType;
                return this;
            }

            /**
             * The status of the vulnerability prevention feature. Valid values:
             * <p>
             * 
             * *   **partProtected**: enabled for partial assets
             * *   **protected**: enabled
             * *   **unProtected**: disabled
             */
            public Builder vulnStatus(String vulnStatus) {
                this.vulnStatus = vulnStatus;
                return this;
            }

            public ResourceList build() {
                return new ResourceList(this);
            } 

        } 

    }
    public static class VulnList extends TeaModel {
        @NameInMap("AttackCnt")
        private Integer attackCnt;

        @NameInMap("AttackType")
        private Integer attackType;

        @NameInMap("BasicRuleIds")
        private String basicRuleIds;

        @NameInMap("CveId")
        private String cveId;

        @NameInMap("FirstTime")
        private Long firstTime;

        @NameInMap("HighlightTag")
        private Integer highlightTag;

        @NameInMap("LastTime")
        private Long lastTime;

        @NameInMap("MemberUid")
        private String memberUid;

        @NameInMap("NeedOpenBasicRule")
        private Boolean needOpenBasicRule;

        @NameInMap("NeedOpenBasicRuleUuids")
        private String needOpenBasicRuleUuids;

        @NameInMap("NeedOpenRunMode")
        private Boolean needOpenRunMode;

        @NameInMap("NeedOpenVirtualPatche")
        private Boolean needOpenVirtualPatche;

        @NameInMap("NeedOpenVirtualPatcheUuids")
        private String needOpenVirtualPatcheUuids;

        @NameInMap("NeedRuleClass")
        private Integer needRuleClass;

        @NameInMap("ResourceCnt")
        private Integer resourceCnt;

        @NameInMap("ResourceList")
        private java.util.List < ResourceList> resourceList;

        @NameInMap("VirtualPatcheIds")
        private String virtualPatcheIds;

        @NameInMap("VulnKey")
        private String vulnKey;

        @NameInMap("VulnLevel")
        private String vulnLevel;

        @NameInMap("VulnName")
        private String vulnName;

        @NameInMap("VulnStatus")
        private String vulnStatus;

        @NameInMap("VulnType")
        private String vulnType;

        private VulnList(Builder builder) {
            this.attackCnt = builder.attackCnt;
            this.attackType = builder.attackType;
            this.basicRuleIds = builder.basicRuleIds;
            this.cveId = builder.cveId;
            this.firstTime = builder.firstTime;
            this.highlightTag = builder.highlightTag;
            this.lastTime = builder.lastTime;
            this.memberUid = builder.memberUid;
            this.needOpenBasicRule = builder.needOpenBasicRule;
            this.needOpenBasicRuleUuids = builder.needOpenBasicRuleUuids;
            this.needOpenRunMode = builder.needOpenRunMode;
            this.needOpenVirtualPatche = builder.needOpenVirtualPatche;
            this.needOpenVirtualPatcheUuids = builder.needOpenVirtualPatcheUuids;
            this.needRuleClass = builder.needRuleClass;
            this.resourceCnt = builder.resourceCnt;
            this.resourceList = builder.resourceList;
            this.virtualPatcheIds = builder.virtualPatcheIds;
            this.vulnKey = builder.vulnKey;
            this.vulnLevel = builder.vulnLevel;
            this.vulnName = builder.vulnName;
            this.vulnStatus = builder.vulnStatus;
            this.vulnType = builder.vulnType;
        }

        public static Builder builder() {
            return new Builder();
        }

        public static VulnList create() {
            return builder().build();
        }

        /**
         * @return attackCnt
         */
        public Integer getAttackCnt() {
            return this.attackCnt;
        }

        /**
         * @return attackType
         */
        public Integer getAttackType() {
            return this.attackType;
        }

        /**
         * @return basicRuleIds
         */
        public String getBasicRuleIds() {
            return this.basicRuleIds;
        }

        /**
         * @return cveId
         */
        public String getCveId() {
            return this.cveId;
        }

        /**
         * @return firstTime
         */
        public Long getFirstTime() {
            return this.firstTime;
        }

        /**
         * @return highlightTag
         */
        public Integer getHighlightTag() {
            return this.highlightTag;
        }

        /**
         * @return lastTime
         */
        public Long getLastTime() {
            return this.lastTime;
        }

        /**
         * @return memberUid
         */
        public String getMemberUid() {
            return this.memberUid;
        }

        /**
         * @return needOpenBasicRule
         */
        public Boolean getNeedOpenBasicRule() {
            return this.needOpenBasicRule;
        }

        /**
         * @return needOpenBasicRuleUuids
         */
        public String getNeedOpenBasicRuleUuids() {
            return this.needOpenBasicRuleUuids;
        }

        /**
         * @return needOpenRunMode
         */
        public Boolean getNeedOpenRunMode() {
            return this.needOpenRunMode;
        }

        /**
         * @return needOpenVirtualPatche
         */
        public Boolean getNeedOpenVirtualPatche() {
            return this.needOpenVirtualPatche;
        }

        /**
         * @return needOpenVirtualPatcheUuids
         */
        public String getNeedOpenVirtualPatcheUuids() {
            return this.needOpenVirtualPatcheUuids;
        }

        /**
         * @return needRuleClass
         */
        public Integer getNeedRuleClass() {
            return this.needRuleClass;
        }

        /**
         * @return resourceCnt
         */
        public Integer getResourceCnt() {
            return this.resourceCnt;
        }

        /**
         * @return resourceList
         */
        public java.util.List < ResourceList> getResourceList() {
            return this.resourceList;
        }

        /**
         * @return virtualPatcheIds
         */
        public String getVirtualPatcheIds() {
            return this.virtualPatcheIds;
        }

        /**
         * @return vulnKey
         */
        public String getVulnKey() {
            return this.vulnKey;
        }

        /**
         * @return vulnLevel
         */
        public String getVulnLevel() {
            return this.vulnLevel;
        }

        /**
         * @return vulnName
         */
        public String getVulnName() {
            return this.vulnName;
        }

        /**
         * @return vulnStatus
         */
        public String getVulnStatus() {
            return this.vulnStatus;
        }

        /**
         * @return vulnType
         */
        public String getVulnType() {
            return this.vulnType;
        }

        public static final class Builder {
            private Integer attackCnt; 
            private Integer attackType; 
            private String basicRuleIds; 
            private String cveId; 
            private Long firstTime; 
            private Integer highlightTag; 
            private Long lastTime; 
            private String memberUid; 
            private Boolean needOpenBasicRule; 
            private String needOpenBasicRuleUuids; 
            private Boolean needOpenRunMode; 
            private Boolean needOpenVirtualPatche; 
            private String needOpenVirtualPatcheUuids; 
            private Integer needRuleClass; 
            private Integer resourceCnt; 
            private java.util.List < ResourceList> resourceList; 
            private String virtualPatcheIds; 
            private String vulnKey; 
            private String vulnLevel; 
            private String vulnName; 
            private String vulnStatus; 
            private String vulnType; 

            /**
             * The number of vulnerability attacks.
             */
            public Builder attackCnt(Integer attackCnt) {
                this.attackCnt = attackCnt;
                return this;
            }

            /**
             * The attack type of the vulnerability prevention event. Valid values:
             * <p>
             * 
             * *   **1**: suspicious connection
             * *   **2**: command execution
             * *   **3**: brute-force attack
             * *   **4**: scanning
             * *   **5**: others
             * *   **6**: information leakage
             * *   **7**: DoS attack
             * *   **8**: buffer overflow attack
             * *   **9**: web attack
             * *   **10**: webshell
             * *   **11**: computer worm
             * *   **12**: mining
             * *   **13**: reverse shell
             */
            public Builder attackType(Integer attackType) {
                this.attackType = attackType;
                return this;
            }

            /**
             * The IDs of associated basic protection policies.
             */
            public Builder basicRuleIds(String basicRuleIds) {
                this.basicRuleIds = basicRuleIds;
                return this;
            }

            /**
             * The CVE IDs.
             */
            public Builder cveId(String cveId) {
                this.cveId = cveId;
                return this;
            }

            /**
             * The time when the first attack was launched.
             */
            public Builder firstTime(Long firstTime) {
                this.firstTime = firstTime;
                return this;
            }

            /**
             * Indicates whether you need to pay special attention to the vulnerability. Valid values:
             * <p>
             * 
             * *   **0**: no
             * *   **1**: yes
             */
            public Builder highlightTag(Integer highlightTag) {
                this.highlightTag = highlightTag;
                return this;
            }

            /**
             * The time when the last attack was launched.
             */
            public Builder lastTime(Long lastTime) {
                this.lastTime = lastTime;
                return this;
            }

            /**
             * The UID of the member that is managed by your Alibaba Cloud account.
             */
            public Builder memberUid(String memberUid) {
                this.memberUid = memberUid;
                return this;
            }

            /**
             * Indicates whether the basic protection policy that related to the vulnerability is enabled. Valid values:
             * <p>
             * 
             * *   **true**
             * *   **false**
             * 
             * >  If the value of this parameter is true, you must set the action of the basic protection policy related to the vulnerability to Block.
             */
            public Builder needOpenBasicRule(Boolean needOpenBasicRule) {
                this.needOpenBasicRule = needOpenBasicRule;
                return this;
            }

            /**
             * The UUIDs of the basic protection policies for which the action needs to be changed to Block.
             */
            public Builder needOpenBasicRuleUuids(String needOpenBasicRuleUuids) {
                this.needOpenBasicRuleUuids = needOpenBasicRuleUuids;
                return this;
            }

            /**
             * Indicates whether Threat Engine Mode needs to be configured when you enable protection. Valid values:
             * <p>
             * 
             * *   **true**
             * *   **false**
             */
            public Builder needOpenRunMode(Boolean needOpenRunMode) {
                this.needOpenRunMode = needOpenRunMode;
                return this;
            }

            /**
             * Indicates whether the virtual patching policy that related to the vulnerability is enabled. Valid values:
             * <p>
             * 
             * *   **true**
             * *   **false**
             * 
             * >  If the value of this parameter is true, you must set the action of the virtual patching policy that related to the vulnerability to Block.
             */
            public Builder needOpenVirtualPatche(Boolean needOpenVirtualPatche) {
                this.needOpenVirtualPatche = needOpenVirtualPatche;
                return this;
            }

            /**
             * The UUIDs of the virtual patching policies for which the action needs to be changed to Block.
             */
            public Builder needOpenVirtualPatcheUuids(String needOpenVirtualPatcheUuids) {
                this.needOpenVirtualPatcheUuids = needOpenVirtualPatcheUuids;
                return this;
            }

            /**
             * The type of the rule group. Valid values:
             * <p>
             * 
             * *   **1** (default): loose
             * *   **2**: medium
             * *   **3**: strict
             */
            public Builder needRuleClass(Integer needRuleClass) {
                this.needRuleClass = needRuleClass;
                return this;
            }

            /**
             * The number of assets on which vulnerabilities are detected.
             */
            public Builder resourceCnt(Integer resourceCnt) {
                this.resourceCnt = resourceCnt;
                return this;
            }

            /**
             * The assets on which the vulnerability is detected.
             */
            public Builder resourceList(java.util.List < ResourceList> resourceList) {
                this.resourceList = resourceList;
                return this;
            }

            /**
             * The IDs of associated virtual patching policies.
             */
            public Builder virtualPatcheIds(String virtualPatcheIds) {
                this.virtualPatcheIds = virtualPatcheIds;
                return this;
            }

            /**
             * The code of the vulnerability.
             */
            public Builder vulnKey(String vulnKey) {
                this.vulnKey = vulnKey;
                return this;
            }

            /**
             * The risk level of the vulnerability. Valid values:
             * <p>
             * 
             * *   **high**
             * *   **medium**
             * *   **low**
             */
            public Builder vulnLevel(String vulnLevel) {
                this.vulnLevel = vulnLevel;
                return this;
            }

            /**
             * The name of the vulnerability.
             */
            public Builder vulnName(String vulnName) {
                this.vulnName = vulnName;
                return this;
            }

            /**
             * The status of the vulnerability prevention feature. Valid values:
             * <p>
             * 
             * *   **partProtected**: enabled for partial assets
             * *   **protected**: enabled
             * *   **unProtected**: disabled
             */
            public Builder vulnStatus(String vulnStatus) {
                this.vulnStatus = vulnStatus;
                return this;
            }

            /**
             * The type of the vulnerability. Valid values:
             * <p>
             * 
             * *   **emg**: urgent vulnerability
             * *   **webcms**: Web-CMS vulnerability
             * *   **app**: application vulnerability
             */
            public Builder vulnType(String vulnType) {
                this.vulnType = vulnType;
                return this;
            }

            public VulnList build() {
                return new VulnList(this);
            } 

        } 

    }
}
