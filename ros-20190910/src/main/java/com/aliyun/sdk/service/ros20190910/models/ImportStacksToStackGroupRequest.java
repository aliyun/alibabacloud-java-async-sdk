// This file is auto-generated, don't edit it. Thanks.
package com.aliyun.sdk.service.ros20190910.models;

import com.aliyun.sdk.gateway.pop.*;
import darabonba.core.*;
import darabonba.core.async.*;
import darabonba.core.sync.*;
import darabonba.core.client.*;
import darabonba.core.RequestModel;
import darabonba.core.TeaModel;
import com.aliyun.sdk.gateway.pop.models.*;

/**
 * 
 * {@link ImportStacksToStackGroupRequest} extends {@link RequestModel}
 *
 * <p>ImportStacksToStackGroupRequest</p>
 */
public class ImportStacksToStackGroupRequest extends Request {
    @com.aliyun.core.annotation.Query
    @com.aliyun.core.annotation.NameInMap("ClientToken")
    private String clientToken;

    @com.aliyun.core.annotation.Query
    @com.aliyun.core.annotation.NameInMap("OperationDescription")
    private String operationDescription;

    @com.aliyun.core.annotation.Query
    @com.aliyun.core.annotation.NameInMap("OperationPreferences")
    private java.util.Map<String, ?> operationPreferences;

    @com.aliyun.core.annotation.Query
    @com.aliyun.core.annotation.NameInMap("RegionId")
    @com.aliyun.core.annotation.Validation(required = true)
    private String regionId;

    @com.aliyun.core.annotation.Query
    @com.aliyun.core.annotation.NameInMap("ResourceDirectoryFolderIds")
    private java.util.List<String> resourceDirectoryFolderIds;

    @com.aliyun.core.annotation.Query
    @com.aliyun.core.annotation.NameInMap("StackArns")
    @com.aliyun.core.annotation.Validation(required = true)
    private java.util.List<String> stackArns;

    @com.aliyun.core.annotation.Query
    @com.aliyun.core.annotation.NameInMap("StackGroupName")
    @com.aliyun.core.annotation.Validation(required = true)
    private String stackGroupName;

    private ImportStacksToStackGroupRequest(Builder builder) {
        super(builder);
        this.clientToken = builder.clientToken;
        this.operationDescription = builder.operationDescription;
        this.operationPreferences = builder.operationPreferences;
        this.regionId = builder.regionId;
        this.resourceDirectoryFolderIds = builder.resourceDirectoryFolderIds;
        this.stackArns = builder.stackArns;
        this.stackGroupName = builder.stackGroupName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static ImportStacksToStackGroupRequest create() {
        return builder().build();
    }

@Override
    public Builder toBuilder() {
        return new Builder(this);
    }

    /**
     * @return clientToken
     */
    public String getClientToken() {
        return this.clientToken;
    }

    /**
     * @return operationDescription
     */
    public String getOperationDescription() {
        return this.operationDescription;
    }

    /**
     * @return operationPreferences
     */
    public java.util.Map<String, ?> getOperationPreferences() {
        return this.operationPreferences;
    }

    /**
     * @return regionId
     */
    public String getRegionId() {
        return this.regionId;
    }

    /**
     * @return resourceDirectoryFolderIds
     */
    public java.util.List<String> getResourceDirectoryFolderIds() {
        return this.resourceDirectoryFolderIds;
    }

    /**
     * @return stackArns
     */
    public java.util.List<String> getStackArns() {
        return this.stackArns;
    }

    /**
     * @return stackGroupName
     */
    public String getStackGroupName() {
        return this.stackGroupName;
    }

    public static final class Builder extends Request.Builder<ImportStacksToStackGroupRequest, Builder> {
        private String clientToken; 
        private String operationDescription; 
        private java.util.Map<String, ?> operationPreferences; 
        private String regionId; 
        private java.util.List<String> resourceDirectoryFolderIds; 
        private java.util.List<String> stackArns; 
        private String stackGroupName; 

        private Builder() {
            super();
        } 

        private Builder(ImportStacksToStackGroupRequest request) {
            super(request);
            this.clientToken = request.clientToken;
            this.operationDescription = request.operationDescription;
            this.operationPreferences = request.operationPreferences;
            this.regionId = request.regionId;
            this.resourceDirectoryFolderIds = request.resourceDirectoryFolderIds;
            this.stackArns = request.stackArns;
            this.stackGroupName = request.stackGroupName;
        } 

        /**
         * <p>Ensures the idempotence of the request. This value is generated by the client and must be globally unique. 
         * It cannot exceed 64 characters and can include letters, numbers, hyphens (-), and underscores (_). 
         * For more information, see <a href="https://help.aliyun.com/document_detail/134212.html">How to Ensure Idempotence</a>.</p>
         * 
         * <strong>example:</strong>
         * <p>123e4567-e89b-12d3-a456-42665544****</p>
         */
        public Builder clientToken(String clientToken) {
            this.putQueryParameter("ClientToken", clientToken);
            this.clientToken = clientToken;
            return this;
        }

        /**
         * <p>Description of the operation.</p>
         * 
         * <strong>example:</strong>
         * <p>Import ops stacks to stack group</p>
         */
        public Builder operationDescription(String operationDescription) {
            this.putQueryParameter("OperationDescription", operationDescription);
            this.operationDescription = operationDescription;
            return this;
        }

        /**
         * <p>Operation settings for importing stacks into the stack group.</p>
         * <p>Includes the following parameters:</p>
         * <ul>
         * <li><p>{&quot;FailureToleranceCount&quot;: N}</p>
         * <p>Failure tolerance count. The number of accounts in which the stack can fail in each region. If this number is exceeded, the operation in that region will stop. If the operation in one region stops, it will not continue in other regions.</p>
         * <p> The range of N: 0~20.</p>
         * <p> If FailureToleranceCount is not specified, the default value is 0.</p>
         * </li>
         * <li><p>{&quot;FailureTolerancePercentage&quot;: N}</p>
         * <p> Failure tolerance percentage. The percentage of total accounts in which the stack can fail in each region. If this percentage is exceeded, the operation in that region will stop.</p>
         * <p> The range of N: 0~100. If the percentage is not an integer, ROS will round down.</p>
         * <p> If FailureTolerancePercentage is not specified, the default value is 0.</p>
         * </li>
         * <li><p>{&quot;MaxConcurrentCount&quot;: N}</p>
         * <p> Maximum concurrent account count. The number of accounts in which the stack can be deployed simultaneously in each region.</p>
         * <p> The range of N: 1~20.</p>
         * <p> If MaxConcurrentCount is not specified, the default value is 1.</p>
         * </li>
         * <li><p>{&quot;MaxConcurrentPercentage&quot;: N} Maximum concurrent account percentage.</p>
         * <p> The percentage of total accounts in which the stack can be deployed simultaneously in each region.</p>
         * <p> The range of N: 1~100. If the percentage is not an integer, ROS will round down.</p>
         * <p> If MaxConcurrentPercentage is not specified, the default value is 1.</p>
         * </li>
         * <li><p>{&quot;RegionConcurrencyType&quot;: N}
         * Region-level concurrency type for deploying stack instances, values:</p>
         * <ul>
         * <li><p>SEQUENTIAL (default): Deploy sequentially in each specified region, only one region at a time.</p>
         * </li>
         * <li><p>PARALLEL: Deploy in parallel across all specified regions.</p>
         * </li>
         * </ul>
         * </li>
         * </ul>
         * <p>Multiple parameters are separated by commas (,).</p>
         * <blockquote>
         * <ul>
         * <li>Do not specify both MaxConcurrentCount and MaxConcurrentPercentage.  </li>
         * <li>Do not specify both FailureToleranceCount and FailureTolerancePercentage.</li>
         * </ul>
         * </blockquote>
         * 
         * <strong>example:</strong>
         * <p>{&quot;FailureToleranceCount&quot;: 1,&quot;MaxConcurrentCount&quot;: 2}</p>
         */
        public Builder operationPreferences(java.util.Map<String, ?> operationPreferences) {
            String operationPreferencesShrink = shrink(operationPreferences, "OperationPreferences", "json");
            this.putQueryParameter("OperationPreferences", operationPreferencesShrink);
            this.operationPreferences = operationPreferences;
            return this;
        }

        /**
         * <p>The region ID of the stack group. You can call <a href="https://help.aliyun.com/document_detail/131035.html">DescribeRegions</a> to view the latest list of Alibaba Cloud regions.</p>
         * <p>This parameter is required.</p>
         * 
         * <strong>example:</strong>
         * <p>cn-hangzhou</p>
         */
        public Builder regionId(String regionId) {
            this.putQueryParameter("RegionId", regionId);
            this.regionId = regionId;
            return this;
        }

        /**
         * <p>A list of resource directory folder IDs for the stacks to be imported. A maximum of 10 folders can be added.</p>
         */
        public Builder resourceDirectoryFolderIds(java.util.List<String> resourceDirectoryFolderIds) {
            String resourceDirectoryFolderIdsShrink = shrink(resourceDirectoryFolderIds, "ResourceDirectoryFolderIds", "json");
            this.putQueryParameter("ResourceDirectoryFolderIds", resourceDirectoryFolderIdsShrink);
            this.resourceDirectoryFolderIds = resourceDirectoryFolderIds;
            return this;
        }

        /**
         * <p>A list of ARNs for the stacks to be imported into the stack group, in the format <code>acs:ros:${RegionId}:${AccountId}:stack/${StackId}</code>. A maximum of 10 stacks can be added.</p>
         * <p>This parameter is required.</p>
         */
        public Builder stackArns(java.util.List<String> stackArns) {
            String stackArnsShrink = shrink(stackArns, "StackArns", "json");
            this.putQueryParameter("StackArns", stackArnsShrink);
            this.stackArns = stackArns;
            return this;
        }

        /**
         * <p>The name of the stack group. The name must be unique within a single region. It cannot exceed 255 characters and must start with a letter or number, and can include letters, numbers, hyphens (-), and underscores (_).</p>
         * <p>This parameter is required.</p>
         * 
         * <strong>example:</strong>
         * <p>MyStackGroup</p>
         */
        public Builder stackGroupName(String stackGroupName) {
            this.putQueryParameter("StackGroupName", stackGroupName);
            this.stackGroupName = stackGroupName;
            return this;
        }

        @Override
        public ImportStacksToStackGroupRequest build() {
            return new ImportStacksToStackGroupRequest(this);
        } 

    } 

}
