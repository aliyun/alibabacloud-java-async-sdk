// This file is auto-generated, don't edit it. Thanks.
package com.aliyun.sdk.service.sas20181203.models;

import com.aliyun.sdk.gateway.pop.*;
import darabonba.core.*;
import darabonba.core.async.*;
import darabonba.core.sync.*;
import darabonba.core.client.*;
import darabonba.core.RequestModel;
import darabonba.core.TeaModel;
import com.aliyun.sdk.gateway.pop.models.*;

/**
 * 
 * {@link DescribeGraph4InvestigationOnlineResponseBody} extends {@link TeaModel}
 *
 * <p>DescribeGraph4InvestigationOnlineResponseBody</p>
 */
public class DescribeGraph4InvestigationOnlineResponseBody extends TeaModel {
    @com.aliyun.core.annotation.NameInMap("Code")
    private String code;

    @com.aliyun.core.annotation.NameInMap("Data")
    private Data data;

    @com.aliyun.core.annotation.NameInMap("Message")
    private String message;

    @com.aliyun.core.annotation.NameInMap("RequestId")
    private String requestId;

    @com.aliyun.core.annotation.NameInMap("Success")
    private Boolean success;

    private DescribeGraph4InvestigationOnlineResponseBody(Builder builder) {
        this.code = builder.code;
        this.data = builder.data;
        this.message = builder.message;
        this.requestId = builder.requestId;
        this.success = builder.success;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static DescribeGraph4InvestigationOnlineResponseBody create() {
        return builder().build();
    }

    public Builder toBuilder() {
        return new Builder(this);
    }

    /**
     * @return code
     */
    public String getCode() {
        return this.code;
    }

    /**
     * @return data
     */
    public Data getData() {
        return this.data;
    }

    /**
     * @return message
     */
    public String getMessage() {
        return this.message;
    }

    /**
     * @return requestId
     */
    public String getRequestId() {
        return this.requestId;
    }

    /**
     * @return success
     */
    public Boolean getSuccess() {
        return this.success;
    }

    public static final class Builder {
        private String code; 
        private Data data; 
        private String message; 
        private String requestId; 
        private Boolean success; 

        private Builder() {
        } 

        private Builder(DescribeGraph4InvestigationOnlineResponseBody model) {
            this.code = model.code;
            this.data = model.data;
            this.message = model.message;
            this.requestId = model.requestId;
            this.success = model.success;
        } 

        /**
         * <p>Result code, where <strong>200</strong> indicates success. Any other value indicates failure, and the caller can use this field to determine the reason for the failure.</p>
         * 
         * <strong>example:</strong>
         * <p>200</p>
         */
        public Builder code(String code) {
            this.code = code;
            return this;
        }

        /**
         * <p>Data</p>
         */
        public Builder data(Data data) {
            this.data = data;
            return this;
        }

        /**
         * <p>The response message from the request.</p>
         * 
         * <strong>example:</strong>
         * <p>successful</p>
         */
        public Builder message(String message) {
            this.message = message;
            return this;
        }

        /**
         * <p>A unique identifier generated by Alibaba Cloud for this request.</p>
         * 
         * <strong>example:</strong>
         * <p>C699E4E4-F2F4-58FC-A949-457FFE59****</p>
         */
        public Builder requestId(String requestId) {
            this.requestId = requestId;
            return this;
        }

        /**
         * <p>The result status of the API call. Values:</p>
         * <ul>
         * <li><strong>true</strong>: The API call was successful.</li>
         * <li><strong>false</strong>: The API call failed.</li>
         * </ul>
         * 
         * <strong>example:</strong>
         * <p>true</p>
         */
        public Builder success(Boolean success) {
            this.success = success;
            return this;
        }

        public DescribeGraph4InvestigationOnlineResponseBody build() {
            return new DescribeGraph4InvestigationOnlineResponseBody(this);
        } 

    } 

    /**
     * 
     * {@link DescribeGraph4InvestigationOnlineResponseBody} extends {@link TeaModel}
     *
     * <p>DescribeGraph4InvestigationOnlineResponseBody</p>
     */
    public static class EdgeList extends TeaModel {
        @com.aliyun.core.annotation.NameInMap("EndId")
        private String endId;

        @com.aliyun.core.annotation.NameInMap("EndType")
        private String endType;

        @com.aliyun.core.annotation.NameInMap("Name")
        private String name;

        @com.aliyun.core.annotation.NameInMap("StartId")
        private String startId;

        @com.aliyun.core.annotation.NameInMap("StartType")
        private String startType;

        @com.aliyun.core.annotation.NameInMap("Time")
        private String time;

        @com.aliyun.core.annotation.NameInMap("Type")
        private String type;

        private EdgeList(Builder builder) {
            this.endId = builder.endId;
            this.endType = builder.endType;
            this.name = builder.name;
            this.startId = builder.startId;
            this.startType = builder.startType;
            this.time = builder.time;
            this.type = builder.type;
        }

        public static Builder builder() {
            return new Builder();
        }

        public static EdgeList create() {
            return builder().build();
        }

        /**
         * @return endId
         */
        public String getEndId() {
            return this.endId;
        }

        /**
         * @return endType
         */
        public String getEndType() {
            return this.endType;
        }

        /**
         * @return name
         */
        public String getName() {
            return this.name;
        }

        /**
         * @return startId
         */
        public String getStartId() {
            return this.startId;
        }

        /**
         * @return startType
         */
        public String getStartType() {
            return this.startType;
        }

        /**
         * @return time
         */
        public String getTime() {
            return this.time;
        }

        /**
         * @return type
         */
        public String getType() {
            return this.type;
        }

        public static final class Builder {
            private String endId; 
            private String endType; 
            private String name; 
            private String startId; 
            private String startType; 
            private String time; 
            private String type; 

            private Builder() {
            } 

            private Builder(EdgeList model) {
                this.endId = model.endId;
                this.endType = model.endType;
                this.name = model.name;
                this.startId = model.startId;
                this.startType = model.startType;
                this.time = model.time;
                this.type = model.type;
            } 

            /**
             * <p>ID of the end point of the edge.</p>
             * 
             * <strong>example:</strong>
             * <p>f944c2362c7e111dee16f0e70ad2xxxx</p>
             */
            public Builder endId(String endId) {
                this.endId = endId;
                return this;
            }

            /**
             * <p>The type of the end point of the current edge. Possible values include but are not limited to:</p>
             * <ul>
             * <li><strong>process</strong>: Process</li>
             * <li><strong>file</strong>: File</li>
             * <li><strong>alert</strong>: Alert</li>
             * <li><strong>ip</strong>: IP address</li>
             * <li><strong>domain</strong>: Domain</li>
             * </ul>
             * 
             * <strong>example:</strong>
             * <p>process</p>
             */
            public Builder endType(String endType) {
                this.endType = endType;
                return this;
            }

            /**
             * <p>Edge name.</p>
             * 
             * <strong>example:</strong>
             * <p>bash-&gt;apt-get</p>
             */
            public Builder name(String name) {
                this.name = name;
                return this;
            }

            /**
             * <p>Start vertex id of edge.</p>
             * 
             * <strong>example:</strong>
             * <p>f944c2362c7e111dee16f0e70ad2xxxx</p>
             */
            public Builder startId(String startId) {
                this.startId = startId;
                return this;
            }

            /**
             * <p>The type of the starting point of the edge. Possible values include, but are not limited to:</p>
             * <ul>
             * <li><strong>process</strong>： Process</li>
             * <li><strong>file</strong>： File</li>
             * <li><strong>alert</strong>： Alert</li>
             * <li><strong>ip</strong>： IP address</li>
             * <li><strong>domain</strong>： Domain</li>
             * </ul>
             * 
             * <strong>example:</strong>
             * <p>file</p>
             */
            public Builder startType(String startType) {
                this.startType = startType;
                return this;
            }

            /**
             * <p>The time when the edge was established.</p>
             * 
             * <strong>example:</strong>
             * <p>2024-07-01 15:25:46</p>
             */
            public Builder time(String time) {
                this.time = time;
                return this;
            }

            /**
             * <p>The type of the edge.</p>
             * 
             * <strong>example:</strong>
             * <p>process_spawn_process</p>
             */
            public Builder type(String type) {
                this.type = type;
                return this;
            }

            public EdgeList build() {
                return new EdgeList(this);
            } 

        } 

    }
    /**
     * 
     * {@link DescribeGraph4InvestigationOnlineResponseBody} extends {@link TeaModel}
     *
     * <p>DescribeGraph4InvestigationOnlineResponseBody</p>
     */
    public static class EntityTypeList extends TeaModel {
        @com.aliyun.core.annotation.NameInMap("DisplayColor")
        private String displayColor;

        @com.aliyun.core.annotation.NameInMap("DisplayIcon")
        private String displayIcon;

        @com.aliyun.core.annotation.NameInMap("DisplayOrder")
        private Integer displayOrder;

        @com.aliyun.core.annotation.NameInMap("Id")
        private String id;

        @com.aliyun.core.annotation.NameInMap("Name")
        private String name;

        private EntityTypeList(Builder builder) {
            this.displayColor = builder.displayColor;
            this.displayIcon = builder.displayIcon;
            this.displayOrder = builder.displayOrder;
            this.id = builder.id;
            this.name = builder.name;
        }

        public static Builder builder() {
            return new Builder();
        }

        public static EntityTypeList create() {
            return builder().build();
        }

        /**
         * @return displayColor
         */
        public String getDisplayColor() {
            return this.displayColor;
        }

        /**
         * @return displayIcon
         */
        public String getDisplayIcon() {
            return this.displayIcon;
        }

        /**
         * @return displayOrder
         */
        public Integer getDisplayOrder() {
            return this.displayOrder;
        }

        /**
         * @return id
         */
        public String getId() {
            return this.id;
        }

        /**
         * @return name
         */
        public String getName() {
            return this.name;
        }

        public static final class Builder {
            private String displayColor; 
            private String displayIcon; 
            private Integer displayOrder; 
            private String id; 
            private String name; 

            private Builder() {
            } 

            private Builder(EntityTypeList model) {
                this.displayColor = model.displayColor;
                this.displayIcon = model.displayIcon;
                this.displayOrder = model.displayOrder;
                this.id = model.id;
                this.name = model.name;
            } 

            /**
             * <p>Vertex rendering color.</p>
             * 
             * <strong>example:</strong>
             * <p>#fff</p>
             */
            public Builder displayColor(String displayColor) {
                this.displayColor = displayColor;
                return this;
            }

            /**
             * <p>Vertex icon.</p>
             * 
             * <strong>example:</strong>
             * <p><a href="https://img.alicdn.com/tfs/TB176P5OgDqK1RjSZSyXXaxEVXa-49-48.png">https://img.alicdn.com/tfs/TB176P5OgDqK1RjSZSyXXaxEVXa-49-48.png</a></p>
             */
            public Builder displayIcon(String displayIcon) {
                this.displayIcon = displayIcon;
                return this;
            }

            /**
             * <p>Display order</p>
             * 
             * <strong>example:</strong>
             * <p>1</p>
             */
            public Builder displayOrder(Integer displayOrder) {
                this.displayOrder = displayOrder;
                return this;
            }

            /**
             * <p>Node type ID.</p>
             * 
             * <strong>example:</strong>
             * <p>1</p>
             */
            public Builder id(String id) {
                this.id = id;
                return this;
            }

            /**
             * <p>Vertex name.</p>
             * 
             * <strong>example:</strong>
             * <p>alert</p>
             */
            public Builder name(String name) {
                this.name = name;
                return this;
            }

            public EntityTypeList build() {
                return new EntityTypeList(this);
            } 

        } 

    }
    /**
     * 
     * {@link DescribeGraph4InvestigationOnlineResponseBody} extends {@link TeaModel}
     *
     * <p>DescribeGraph4InvestigationOnlineResponseBody</p>
     */
    public static class RelationTypeList extends TeaModel {
        @com.aliyun.core.annotation.NameInMap("Directed")
        private Integer directed;

        @com.aliyun.core.annotation.NameInMap("DisplayColor")
        private String displayColor;

        @com.aliyun.core.annotation.NameInMap("DisplayIcon")
        private String displayIcon;

        @com.aliyun.core.annotation.NameInMap("Name")
        private String name;

        private RelationTypeList(Builder builder) {
            this.directed = builder.directed;
            this.displayColor = builder.displayColor;
            this.displayIcon = builder.displayIcon;
            this.name = builder.name;
        }

        public static Builder builder() {
            return new Builder();
        }

        public static RelationTypeList create() {
            return builder().build();
        }

        /**
         * @return directed
         */
        public Integer getDirected() {
            return this.directed;
        }

        /**
         * @return displayColor
         */
        public String getDisplayColor() {
            return this.displayColor;
        }

        /**
         * @return displayIcon
         */
        public String getDisplayIcon() {
            return this.displayIcon;
        }

        /**
         * @return name
         */
        public String getName() {
            return this.name;
        }

        public static final class Builder {
            private Integer directed; 
            private String displayColor; 
            private String displayIcon; 
            private String name; 

            private Builder() {
            } 

            private Builder(RelationTypeList model) {
                this.directed = model.directed;
                this.displayColor = model.displayColor;
                this.displayIcon = model.displayIcon;
                this.name = model.name;
            } 

            /**
             * <p>Direction of the edge. Possible values:</p>
             * <ul>
             * <li><strong>1</strong> ： Forward</li>
             * <li><strong>0</strong>： Reverse</li>
             * </ul>
             * 
             * <strong>example:</strong>
             * <p>1</p>
             */
            public Builder directed(Integer directed) {
                this.directed = directed;
                return this;
            }

            /**
             * <p>Render color of the edge.</p>
             * 
             * <strong>example:</strong>
             * <p>#fff</p>
             */
            public Builder displayColor(String displayColor) {
                this.displayColor = displayColor;
                return this;
            }

            /**
             * <p>Icon style of the edge</p>
             * 
             * <strong>example:</strong>
             * <p><a href="https://img.alicdn.com/imgextra/i4/O1CN01ft6rvQ22uUX2JsTmv_!!6000000007180-55-tps-12-12.svg">https://img.alicdn.com/imgextra/i4/O1CN01ft6rvQ22uUX2JsTmv_!!6000000007180-55-tps-12-12.svg</a></p>
             */
            public Builder displayIcon(String displayIcon) {
                this.displayIcon = displayIcon;
                return this;
            }

            /**
             * <p>Name of the edge.</p>
             * 
             * <strong>example:</strong>
             * <p>spawn process</p>
             */
            public Builder name(String name) {
                this.name = name;
                return this;
            }

            public RelationTypeList build() {
                return new RelationTypeList(this);
            } 

        } 

    }
    /**
     * 
     * {@link DescribeGraph4InvestigationOnlineResponseBody} extends {@link TeaModel}
     *
     * <p>DescribeGraph4InvestigationOnlineResponseBody</p>
     */
    public static class NeighborList extends TeaModel {
        @com.aliyun.core.annotation.NameInMap("Count")
        private Integer count;

        @com.aliyun.core.annotation.NameInMap("HasMore")
        private Boolean hasMore;

        @com.aliyun.core.annotation.NameInMap("Type")
        private String type;

        private NeighborList(Builder builder) {
            this.count = builder.count;
            this.hasMore = builder.hasMore;
            this.type = builder.type;
        }

        public static Builder builder() {
            return new Builder();
        }

        public static NeighborList create() {
            return builder().build();
        }

        /**
         * @return count
         */
        public Integer getCount() {
            return this.count;
        }

        /**
         * @return hasMore
         */
        public Boolean getHasMore() {
            return this.hasMore;
        }

        /**
         * @return type
         */
        public String getType() {
            return this.type;
        }

        public static final class Builder {
            private Integer count; 
            private Boolean hasMore; 
            private String type; 

            private Builder() {
            } 

            private Builder(NeighborList model) {
                this.count = model.count;
                this.hasMore = model.hasMore;
                this.type = model.type;
            } 

            /**
             * <p>Number of neighboring nodes.</p>
             * 
             * <strong>example:</strong>
             * <p>1</p>
             */
            public Builder count(Integer count) {
                this.count = count;
                return this;
            }

            /**
             * <p>Indicates whether there are more neighboring vertices.</p>
             * 
             * <strong>example:</strong>
             * <p>False</p>
             */
            public Builder hasMore(Boolean hasMore) {
                this.hasMore = hasMore;
                return this;
            }

            /**
             * <p>Neighbor node type.</p>
             * 
             * <strong>example:</strong>
             * <p>alert</p>
             */
            public Builder type(String type) {
                this.type = type;
                return this;
            }

            public NeighborList build() {
                return new NeighborList(this);
            } 

        } 

    }
    /**
     * 
     * {@link DescribeGraph4InvestigationOnlineResponseBody} extends {@link TeaModel}
     *
     * <p>DescribeGraph4InvestigationOnlineResponseBody</p>
     */
    public static class VertexList extends TeaModel {
        @com.aliyun.core.annotation.NameInMap("Name")
        private String name;

        @com.aliyun.core.annotation.NameInMap("NeighborList")
        private java.util.List<NeighborList> neighborList;

        @com.aliyun.core.annotation.NameInMap("Properties")
        private String properties;

        @com.aliyun.core.annotation.NameInMap("Time")
        private String time;

        @com.aliyun.core.annotation.NameInMap("Type")
        private String type;

        @com.aliyun.core.annotation.NameInMap("Uuid")
        private String uuid;

        private VertexList(Builder builder) {
            this.name = builder.name;
            this.neighborList = builder.neighborList;
            this.properties = builder.properties;
            this.time = builder.time;
            this.type = builder.type;
            this.uuid = builder.uuid;
        }

        public static Builder builder() {
            return new Builder();
        }

        public static VertexList create() {
            return builder().build();
        }

        /**
         * @return name
         */
        public String getName() {
            return this.name;
        }

        /**
         * @return neighborList
         */
        public java.util.List<NeighborList> getNeighborList() {
            return this.neighborList;
        }

        /**
         * @return properties
         */
        public String getProperties() {
            return this.properties;
        }

        /**
         * @return time
         */
        public String getTime() {
            return this.time;
        }

        /**
         * @return type
         */
        public String getType() {
            return this.type;
        }

        /**
         * @return uuid
         */
        public String getUuid() {
            return this.uuid;
        }

        public static final class Builder {
            private String name; 
            private java.util.List<NeighborList> neighborList; 
            private String properties; 
            private String time; 
            private String type; 
            private String uuid; 

            private Builder() {
            } 

            private Builder(VertexList model) {
                this.name = model.name;
                this.neighborList = model.neighborList;
                this.properties = model.properties;
                this.time = model.time;
                this.type = model.type;
                this.uuid = model.uuid;
            } 

            /**
             * <p>Vertex name.</p>
             * 
             * <strong>example:</strong>
             * <p>1a79b3a10ad5e6cad090dd697a7axxxxx</p>
             */
            public Builder name(String name) {
                this.name = name;
                return this;
            }

            /**
             * <p>List of neighboring vertices of the current vertex.</p>
             */
            public Builder neighborList(java.util.List<NeighborList> neighborList) {
                this.neighborList = neighborList;
                return this;
            }

            /**
             * <p>Properties.</p>
             * 
             * <strong>example:</strong>
             * <p>{&quot;DomainName&quot;: {&quot;SupportScratchDetection&quot;: False, &quot;Description&quot;: &quot;The name of the domain.&quot;, &quot;Required&quot;: True, &quot;UpdateAllowed&quot;: False, &quot;Type&quot;: &quot;string&quot;, &quot;Immutable&quot;: False}}</p>
             */
            public Builder properties(String properties) {
                this.properties = properties;
                return this;
            }

            /**
             * <p>Time.</p>
             * 
             * <strong>example:</strong>
             * <p>2024-07-02 16:14:01</p>
             */
            public Builder time(String time) {
                this.time = time;
                return this;
            }

            /**
             * <p>Vertex type.</p>
             * 
             * <strong>example:</strong>
             * <p>alert</p>
             */
            public Builder type(String type) {
                this.type = type;
                return this;
            }

            /**
             * <p>Asset UUID.</p>
             * 
             * <strong>example:</strong>
             * <p>5c081b02-f66a-47a4-bd2f-79ee3eafxxxx</p>
             */
            public Builder uuid(String uuid) {
                this.uuid = uuid;
                return this;
            }

            public VertexList build() {
                return new VertexList(this);
            } 

        } 

    }
    /**
     * 
     * {@link DescribeGraph4InvestigationOnlineResponseBody} extends {@link TeaModel}
     *
     * <p>DescribeGraph4InvestigationOnlineResponseBody</p>
     */
    public static class Data extends TeaModel {
        @com.aliyun.core.annotation.NameInMap("EdgeList")
        private java.util.List<EdgeList> edgeList;

        @com.aliyun.core.annotation.NameInMap("EntityTypeList")
        private java.util.List<EntityTypeList> entityTypeList;

        @com.aliyun.core.annotation.NameInMap("RelationTypeList")
        private java.util.List<RelationTypeList> relationTypeList;

        @com.aliyun.core.annotation.NameInMap("VertexList")
        private java.util.List<VertexList> vertexList;

        private Data(Builder builder) {
            this.edgeList = builder.edgeList;
            this.entityTypeList = builder.entityTypeList;
            this.relationTypeList = builder.relationTypeList;
            this.vertexList = builder.vertexList;
        }

        public static Builder builder() {
            return new Builder();
        }

        public static Data create() {
            return builder().build();
        }

        /**
         * @return edgeList
         */
        public java.util.List<EdgeList> getEdgeList() {
            return this.edgeList;
        }

        /**
         * @return entityTypeList
         */
        public java.util.List<EntityTypeList> getEntityTypeList() {
            return this.entityTypeList;
        }

        /**
         * @return relationTypeList
         */
        public java.util.List<RelationTypeList> getRelationTypeList() {
            return this.relationTypeList;
        }

        /**
         * @return vertexList
         */
        public java.util.List<VertexList> getVertexList() {
            return this.vertexList;
        }

        public static final class Builder {
            private java.util.List<EdgeList> edgeList; 
            private java.util.List<EntityTypeList> entityTypeList; 
            private java.util.List<RelationTypeList> relationTypeList; 
            private java.util.List<VertexList> vertexList; 

            private Builder() {
            } 

            private Builder(Data model) {
                this.edgeList = model.edgeList;
                this.entityTypeList = model.entityTypeList;
                this.relationTypeList = model.relationTypeList;
                this.vertexList = model.vertexList;
            } 

            /**
             * <p>List of edges.</p>
             */
            public Builder edgeList(java.util.List<EdgeList> edgeList) {
                this.edgeList = edgeList;
                return this;
            }

            /**
             * <p>List of vertex types.</p>
             */
            public Builder entityTypeList(java.util.List<EntityTypeList> entityTypeList) {
                this.entityTypeList = entityTypeList;
                return this;
            }

            /**
             * <p>List of edge types.</p>
             */
            public Builder relationTypeList(java.util.List<RelationTypeList> relationTypeList) {
                this.relationTypeList = relationTypeList;
                return this;
            }

            /**
             * <p>List of vertices.</p>
             */
            public Builder vertexList(java.util.List<VertexList> vertexList) {
                this.vertexList = vertexList;
                return this;
            }

            public Data build() {
                return new Data(this);
            } 

        } 

    }
}
