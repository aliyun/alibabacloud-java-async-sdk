// This file is auto-generated, don't edit it. Thanks.
package com.aliyun.sdk.service.sas20181203.models;

import com.aliyun.sdk.gateway.pop.*;
import darabonba.core.*;
import darabonba.core.async.*;
import darabonba.core.sync.*;
import darabonba.core.client.*;
import darabonba.core.RequestModel;
import darabonba.core.TeaModel;
import com.aliyun.sdk.gateway.pop.models.*;

/**
 * 
 * {@link GetCheckCountStatisticResponseBody} extends {@link TeaModel}
 *
 * <p>GetCheckCountStatisticResponseBody</p>
 */
public class GetCheckCountStatisticResponseBody extends TeaModel {
    @com.aliyun.core.annotation.NameInMap("CheckCountStatisticDTO")
    private CheckCountStatisticDTO checkCountStatisticDTO;

    @com.aliyun.core.annotation.NameInMap("RequestId")
    private String requestId;

    private GetCheckCountStatisticResponseBody(Builder builder) {
        this.checkCountStatisticDTO = builder.checkCountStatisticDTO;
        this.requestId = builder.requestId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static GetCheckCountStatisticResponseBody create() {
        return builder().build();
    }

    public Builder toBuilder() {
        return new Builder(this);
    }

    /**
     * @return checkCountStatisticDTO
     */
    public CheckCountStatisticDTO getCheckCountStatisticDTO() {
        return this.checkCountStatisticDTO;
    }

    /**
     * @return requestId
     */
    public String getRequestId() {
        return this.requestId;
    }

    public static final class Builder {
        private CheckCountStatisticDTO checkCountStatisticDTO; 
        private String requestId; 

        private Builder() {
        } 

        private Builder(GetCheckCountStatisticResponseBody model) {
            this.checkCountStatisticDTO = model.checkCountStatisticDTO;
            this.requestId = model.requestId;
        } 

        /**
         * <p>List of risk item count statistics results.</p>
         */
        public Builder checkCountStatisticDTO(CheckCountStatisticDTO checkCountStatisticDTO) {
            this.checkCountStatisticDTO = checkCountStatisticDTO;
            return this;
        }

        /**
         * <p>The ID of this call request, which is a unique identifier generated by Alibaba Cloud for this request and can be used to troubleshoot and locate issues.</p>
         * 
         * <strong>example:</strong>
         * <p>20456DD5-5CBF-5015-9173-12CA4246B***</p>
         */
        public Builder requestId(String requestId) {
            this.requestId = requestId;
            return this;
        }

        public GetCheckCountStatisticResponseBody build() {
            return new GetCheckCountStatisticResponseBody(this);
        } 

    } 

    /**
     * 
     * {@link GetCheckCountStatisticResponseBody} extends {@link TeaModel}
     *
     * <p>GetCheckCountStatisticResponseBody</p>
     */
    public static class CheckCountStatisticItems extends TeaModel {
        @com.aliyun.core.annotation.NameInMap("InstanceId")
        private String instanceId;

        @com.aliyun.core.annotation.NameInMap("InstanceName")
        private String instanceName;

        @com.aliyun.core.annotation.NameInMap("InstanceSubType")
        private Integer instanceSubType;

        @com.aliyun.core.annotation.NameInMap("InstanceSubTypeName")
        private String instanceSubTypeName;

        @com.aliyun.core.annotation.NameInMap("InstanceType")
        private Integer instanceType;

        @com.aliyun.core.annotation.NameInMap("InstanceTypeName")
        private String instanceTypeName;

        @com.aliyun.core.annotation.NameInMap("RegionId")
        private String regionId;

        @com.aliyun.core.annotation.NameInMap("RiskCount")
        private Integer riskCount;

        @com.aliyun.core.annotation.NameInMap("Vendor")
        private Integer vendor;

        private CheckCountStatisticItems(Builder builder) {
            this.instanceId = builder.instanceId;
            this.instanceName = builder.instanceName;
            this.instanceSubType = builder.instanceSubType;
            this.instanceSubTypeName = builder.instanceSubTypeName;
            this.instanceType = builder.instanceType;
            this.instanceTypeName = builder.instanceTypeName;
            this.regionId = builder.regionId;
            this.riskCount = builder.riskCount;
            this.vendor = builder.vendor;
        }

        public static Builder builder() {
            return new Builder();
        }

        public static CheckCountStatisticItems create() {
            return builder().build();
        }

        /**
         * @return instanceId
         */
        public String getInstanceId() {
            return this.instanceId;
        }

        /**
         * @return instanceName
         */
        public String getInstanceName() {
            return this.instanceName;
        }

        /**
         * @return instanceSubType
         */
        public Integer getInstanceSubType() {
            return this.instanceSubType;
        }

        /**
         * @return instanceSubTypeName
         */
        public String getInstanceSubTypeName() {
            return this.instanceSubTypeName;
        }

        /**
         * @return instanceType
         */
        public Integer getInstanceType() {
            return this.instanceType;
        }

        /**
         * @return instanceTypeName
         */
        public String getInstanceTypeName() {
            return this.instanceTypeName;
        }

        /**
         * @return regionId
         */
        public String getRegionId() {
            return this.regionId;
        }

        /**
         * @return riskCount
         */
        public Integer getRiskCount() {
            return this.riskCount;
        }

        /**
         * @return vendor
         */
        public Integer getVendor() {
            return this.vendor;
        }

        public static final class Builder {
            private String instanceId; 
            private String instanceName; 
            private Integer instanceSubType; 
            private String instanceSubTypeName; 
            private Integer instanceType; 
            private String instanceTypeName; 
            private String regionId; 
            private Integer riskCount; 
            private Integer vendor; 

            private Builder() {
            } 

            private Builder(CheckCountStatisticItems model) {
                this.instanceId = model.instanceId;
                this.instanceName = model.instanceName;
                this.instanceSubType = model.instanceSubType;
                this.instanceSubTypeName = model.instanceSubTypeName;
                this.instanceType = model.instanceType;
                this.instanceTypeName = model.instanceTypeName;
                this.regionId = model.regionId;
                this.riskCount = model.riskCount;
                this.vendor = model.vendor;
            } 

            /**
             * <p>Cloud product instance ID.</p>
             * 
             * <strong>example:</strong>
             * <p>i-wz9bpxyu6t74qn9g****</p>
             */
            public Builder instanceId(String instanceId) {
                this.instanceId = instanceId;
                return this;
            }

            /**
             * <p>Instance name of the asset.</p>
             * 
             * <strong>example:</strong>
             * <p>launch-advisor-2021****</p>
             */
            public Builder instanceName(String instanceName) {
                this.instanceName = instanceName;
                return this;
            }

            /**
             * <p>Subtype of the cloud product.</p>
             * 
             * <strong>example:</strong>
             * <p>0</p>
             */
            public Builder instanceSubType(Integer instanceSubType) {
                this.instanceSubType = instanceSubType;
                return this;
            }

            /**
             * <p>The subtype of the cloud product. Values:  </p>
             * <ul>
             * <li>When <strong>InstanceType</strong> is <strong>ECS</strong>, this parameter can take the following values:  <ul>
             * <li><strong>INSTANCE</strong>  </li>
             * <li><strong>DISK</strong>  </li>
             * <li><strong>SECURITY_GROUP</strong></li>
             * </ul>
             * </li>
             * <li>When <strong>InstanceType</strong> is <strong>ACR</strong>, this parameter can take the following values:  <ul>
             * <li><strong>REPOSITORY_ENTERPRISE</strong>  </li>
             * <li><strong>REPOSITORY_PERSON</strong></li>
             * </ul>
             * </li>
             * <li>When <strong>InstanceType</strong> is <strong>RAM</strong>, this parameter can take the following values:  <ul>
             * <li><strong>ALIAS</strong>  </li>
             * <li><strong>USER</strong>  </li>
             * <li><strong>POLICY</strong>  </li>
             * <li><strong>GROUP</strong></li>
             * </ul>
             * </li>
             * <li>When <strong>InstanceType</strong> is <strong>WAF</strong>, this parameter can take the following value:  <ul>
             * <li><strong>DOMAIN</strong></li>
             * </ul>
             * </li>
             * <li>For other <strong>InstanceType</strong> values, this parameter takes the value:  <ul>
             * <li><strong>INSTANCE</strong></li>
             * </ul>
             * </li>
             * </ul>
             * 
             * <strong>example:</strong>
             * <p>INSTANCE</p>
             */
            public Builder instanceSubTypeName(String instanceSubTypeName) {
                this.instanceSubTypeName = instanceSubTypeName;
                return this;
            }

            /**
             * <p>Type of the cloud product. Values:  </p>
             * <ul>
             * <li><strong>0</strong>: ECS (Elastic Compute Service)</li>
             * <li><strong>1</strong>: SLB (Server Load Balancer)</li>
             * <li><strong>2</strong>: NAT Gateway</li>
             * <li><strong>3</strong>: RDS (Relational Database Service) Database</li>
             * <li><strong>4</strong>: MongoDB Database</li>
             * <li><strong>5</strong>: Redis Database</li>
             * <li><strong>6</strong>: Container Image</li>
             * <li><strong>7</strong>: Container</li>
             * </ul>
             * 
             * <strong>example:</strong>
             * <p>0</p>
             */
            public Builder instanceType(Integer instanceType) {
                this.instanceType = instanceType;
                return this;
            }

            /**
             * <p>The asset type of cloud products. Values:</p>
             * <ul>
             * <li><strong>ECS</strong>: Elastic Compute Service </li>
             * <li><strong>SLB</strong>: Server Load Balancer </li>
             * <li><strong>RDS</strong>: Relational Database Service </li>
             * <li><strong>MONGODB</strong>: MongoDB Database </li>
             * <li><strong>KVSTORE</strong>: Redis Database </li>
             * <li><strong>ACR</strong>: Container Registry </li>
             * <li><strong>CSK</strong>: CSK </li>
             * <li><strong>VPC</strong>: Virtual Private Cloud </li>
             * <li><strong>ACTIONTRAIL</strong>: Action Trail </li>
             * <li><strong>CDN</strong>: Content Delivery Network </li>
             * <li><strong>CAS</strong>: Digital Certificate Management Service (formerly SSL Certificates) </li>
             * <li><strong>RDC</strong>: DevOps </li>
             * <li><strong>RAM</strong>: Resource Access Management </li>
             * <li><strong>DDOS</strong>: Distributed Denial of Service </li>
             * <li><strong>WAF</strong>: Web Application Firewall </li>
             * <li><strong>OSS</strong>: Object Storage Service </li>
             * <li><strong>POLARDB</strong>: POLARDB </li>
             * <li><strong>POSTGRESQL</strong>: PostgreSQL </li>
             * <li><strong>MSE</strong>: MSE </li>
             * <li><strong>NAS</strong>: Network Attached Storage </li>
             * <li><strong>SDDP</strong>: Sensitive Data Discovery and Protection </li>
             * <li><strong>EIP</strong>: Elastic IP</li>
             * </ul>
             * 
             * <strong>example:</strong>
             * <p>ECS</p>
             */
            public Builder instanceTypeName(String instanceTypeName) {
                this.instanceTypeName = instanceTypeName;
                return this;
            }

            /**
             * <p>Region ID.</p>
             * 
             * <strong>example:</strong>
             * <p>cn-shanghai</p>
             */
            public Builder regionId(String regionId) {
                this.regionId = regionId;
                return this;
            }

            /**
             * <p>Number of risks.</p>
             * 
             * <strong>example:</strong>
             * <p>22</p>
             */
            public Builder riskCount(Integer riskCount) {
                this.riskCount = riskCount;
                return this;
            }

            /**
             * <p>Cloud vendor. Values:  </p>
             * <ul>
             * <li><strong>ALIYUN</strong>: Alibaba Cloud</li>
             * <li><strong>TENCENT</strong>: Tencent Cloud</li>
             * <li><strong>MICROSOFT</strong>: Azure</li>
             * <li><strong>AWS</strong>: Amazon Web Services (AWS)</li>
             * </ul>
             * 
             * <strong>example:</strong>
             * <p>ALIYUN</p>
             */
            public Builder vendor(Integer vendor) {
                this.vendor = vendor;
                return this;
            }

            public CheckCountStatisticItems build() {
                return new CheckCountStatisticItems(this);
            } 

        } 

    }
    /**
     * 
     * {@link GetCheckCountStatisticResponseBody} extends {@link TeaModel}
     *
     * <p>GetCheckCountStatisticResponseBody</p>
     */
    public static class CheckCountStatisticDTO extends TeaModel {
        @com.aliyun.core.annotation.NameInMap("CheckCountStatisticItems")
        private java.util.List<CheckCountStatisticItems> checkCountStatisticItems;

        @com.aliyun.core.annotation.NameInMap("StatisticType")
        private String statisticType;

        private CheckCountStatisticDTO(Builder builder) {
            this.checkCountStatisticItems = builder.checkCountStatisticItems;
            this.statisticType = builder.statisticType;
        }

        public static Builder builder() {
            return new Builder();
        }

        public static CheckCountStatisticDTO create() {
            return builder().build();
        }

        /**
         * @return checkCountStatisticItems
         */
        public java.util.List<CheckCountStatisticItems> getCheckCountStatisticItems() {
            return this.checkCountStatisticItems;
        }

        /**
         * @return statisticType
         */
        public String getStatisticType() {
            return this.statisticType;
        }

        public static final class Builder {
            private java.util.List<CheckCountStatisticItems> checkCountStatisticItems; 
            private String statisticType; 

            private Builder() {
            } 

            private Builder(CheckCountStatisticDTO model) {
                this.checkCountStatisticItems = model.checkCountStatisticItems;
                this.statisticType = model.statisticType;
            } 

            /**
             * <p>Risk item count statistics results.</p>
             */
            public Builder checkCountStatisticItems(java.util.List<CheckCountStatisticItems> checkCountStatisticItems) {
                this.checkCountStatisticItems = checkCountStatisticItems;
                return this;
            }

            /**
             * <p>The type of data statistics. Values:  </p>
             * <ul>
             * <li><strong>user</strong>: Top 5 over-authorized users.  </li>
             * <li><strong>role</strong>: Top 5 over-authorized roles.  </li>
             * <li><strong>instance</strong>: Top 5 risky cloud products.</li>
             * </ul>
             * 
             * <strong>example:</strong>
             * <p>instance</p>
             */
            public Builder statisticType(String statisticType) {
                this.statisticType = statisticType;
                return this;
            }

            public CheckCountStatisticDTO build() {
                return new CheckCountStatisticDTO(this);
            } 

        } 

    }
}
