// This file is auto-generated, don't edit it. Thanks.
package com.aliyun.sdk.service.sas20181203.models;

import com.aliyun.sdk.gateway.pop.*;
import darabonba.core.*;
import darabonba.core.async.*;
import darabonba.core.sync.*;
import darabonba.core.client.*;
import darabonba.core.RequestModel;
import darabonba.core.TeaModel;
import com.aliyun.sdk.gateway.pop.models.*;

/**
 * 
 * {@link DescribeIdcProbeListResponseBody} extends {@link TeaModel}
 *
 * <p>DescribeIdcProbeListResponseBody</p>
 */
public class DescribeIdcProbeListResponseBody extends TeaModel {
    @com.aliyun.core.annotation.NameInMap("IdcProbes")
    private java.util.List<IdcProbes> idcProbes;

    @com.aliyun.core.annotation.NameInMap("PageInfo")
    private PageInfo pageInfo;

    @com.aliyun.core.annotation.NameInMap("RequestId")
    private String requestId;

    private DescribeIdcProbeListResponseBody(Builder builder) {
        this.idcProbes = builder.idcProbes;
        this.pageInfo = builder.pageInfo;
        this.requestId = builder.requestId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static DescribeIdcProbeListResponseBody create() {
        return builder().build();
    }

    /**
     * @return idcProbes
     */
    public java.util.List<IdcProbes> getIdcProbes() {
        return this.idcProbes;
    }

    /**
     * @return pageInfo
     */
    public PageInfo getPageInfo() {
        return this.pageInfo;
    }

    /**
     * @return requestId
     */
    public String getRequestId() {
        return this.requestId;
    }

    public static final class Builder {
        private java.util.List<IdcProbes> idcProbes; 
        private PageInfo pageInfo; 
        private String requestId; 

        /**
         * <p>IDC probe list.</p>
         */
        public Builder idcProbes(java.util.List<IdcProbes> idcProbes) {
            this.idcProbes = idcProbes;
            return this;
        }

        /**
         * <p>Pagination information.</p>
         */
        public Builder pageInfo(PageInfo pageInfo) {
            this.pageInfo = pageInfo;
            return this;
        }

        /**
         * <p>The ID of this call request, which is a unique identifier generated by Alibaba Cloud for the request and can be used for troubleshooting and problem localization.</p>
         * 
         * <strong>example:</strong>
         * <p>0C8487EF-50C2-54BB-8634-10F8C35D****</p>
         */
        public Builder requestId(String requestId) {
            this.requestId = requestId;
            return this;
        }

        public DescribeIdcProbeListResponseBody build() {
            return new DescribeIdcProbeListResponseBody(this);
        } 

    } 

    /**
     * 
     * {@link DescribeIdcProbeListResponseBody} extends {@link TeaModel}
     *
     * <p>DescribeIdcProbeListResponseBody</p>
     */
    public static class IdcProbes extends TeaModel {
        @com.aliyun.core.annotation.NameInMap("IdcName")
        private String idcName;

        @com.aliyun.core.annotation.NameInMap("IdcRegion")
        private String idcRegion;

        @com.aliyun.core.annotation.NameInMap("InstanceId")
        private String instanceId;

        @com.aliyun.core.annotation.NameInMap("InstanceName")
        private String instanceName;

        @com.aliyun.core.annotation.NameInMap("InternetIp")
        private String internetIp;

        @com.aliyun.core.annotation.NameInMap("IntervalPeriod")
        private Integer intervalPeriod;

        @com.aliyun.core.annotation.NameInMap("IntranetIp")
        private String intranetIp;

        @com.aliyun.core.annotation.NameInMap("IpSegments")
        private String ipSegments;

        @com.aliyun.core.annotation.NameInMap("LinuxPort")
        private String linuxPort;

        @com.aliyun.core.annotation.NameInMap("PeriodUnit")
        private String periodUnit;

        @com.aliyun.core.annotation.NameInMap("ServiceStatus")
        private Integer serviceStatus;

        @com.aliyun.core.annotation.NameInMap("Status")
        private Integer status;

        @com.aliyun.core.annotation.NameInMap("Uuid")
        private String uuid;

        @com.aliyun.core.annotation.NameInMap("WinPort")
        private String winPort;

        private IdcProbes(Builder builder) {
            this.idcName = builder.idcName;
            this.idcRegion = builder.idcRegion;
            this.instanceId = builder.instanceId;
            this.instanceName = builder.instanceName;
            this.internetIp = builder.internetIp;
            this.intervalPeriod = builder.intervalPeriod;
            this.intranetIp = builder.intranetIp;
            this.ipSegments = builder.ipSegments;
            this.linuxPort = builder.linuxPort;
            this.periodUnit = builder.periodUnit;
            this.serviceStatus = builder.serviceStatus;
            this.status = builder.status;
            this.uuid = builder.uuid;
            this.winPort = builder.winPort;
        }

        public static Builder builder() {
            return new Builder();
        }

        public static IdcProbes create() {
            return builder().build();
        }

        /**
         * @return idcName
         */
        public String getIdcName() {
            return this.idcName;
        }

        /**
         * @return idcRegion
         */
        public String getIdcRegion() {
            return this.idcRegion;
        }

        /**
         * @return instanceId
         */
        public String getInstanceId() {
            return this.instanceId;
        }

        /**
         * @return instanceName
         */
        public String getInstanceName() {
            return this.instanceName;
        }

        /**
         * @return internetIp
         */
        public String getInternetIp() {
            return this.internetIp;
        }

        /**
         * @return intervalPeriod
         */
        public Integer getIntervalPeriod() {
            return this.intervalPeriod;
        }

        /**
         * @return intranetIp
         */
        public String getIntranetIp() {
            return this.intranetIp;
        }

        /**
         * @return ipSegments
         */
        public String getIpSegments() {
            return this.ipSegments;
        }

        /**
         * @return linuxPort
         */
        public String getLinuxPort() {
            return this.linuxPort;
        }

        /**
         * @return periodUnit
         */
        public String getPeriodUnit() {
            return this.periodUnit;
        }

        /**
         * @return serviceStatus
         */
        public Integer getServiceStatus() {
            return this.serviceStatus;
        }

        /**
         * @return status
         */
        public Integer getStatus() {
            return this.status;
        }

        /**
         * @return uuid
         */
        public String getUuid() {
            return this.uuid;
        }

        /**
         * @return winPort
         */
        public String getWinPort() {
            return this.winPort;
        }

        public static final class Builder {
            private String idcName; 
            private String idcRegion; 
            private String instanceId; 
            private String instanceName; 
            private String internetIp; 
            private Integer intervalPeriod; 
            private String intranetIp; 
            private String ipSegments; 
            private String linuxPort; 
            private String periodUnit; 
            private Integer serviceStatus; 
            private Integer status; 
            private String uuid; 
            private String winPort; 

            /**
             * <p>IDC data center name.</p>
             * 
             * <strong>example:</strong>
             * <p>3K IDC</p>
             */
            public Builder idcName(String idcName) {
                this.idcName = idcName;
                return this;
            }

            /**
             * <p>Region.</p>
             * 
             * <strong>example:</strong>
             * <p>cn-hangzhou</p>
             */
            public Builder idcRegion(String idcRegion) {
                this.idcRegion = idcRegion;
                return this;
            }

            /**
             * <p>Instance ID of the asset.</p>
             * 
             * <strong>example:</strong>
             * <p>i-xxxxx</p>
             */
            public Builder instanceId(String instanceId) {
                this.instanceId = instanceId;
                return this;
            }

            /**
             * <p>Instance name.</p>
             * 
             * <strong>example:</strong>
             * <p>oraclexxx</p>
             */
            public Builder instanceName(String instanceName) {
                this.instanceName = instanceName;
                return this;
            }

            /**
             * <p>Public IP address.</p>
             * 
             * <strong>example:</strong>
             * <p>47.98.<em>.</em></p>
             */
            public Builder internetIp(String internetIp) {
                this.internetIp = internetIp;
                return this;
            }

            /**
             * <p>Scan period.</p>
             * 
             * <strong>example:</strong>
             * <p>16</p>
             */
            public Builder intervalPeriod(Integer intervalPeriod) {
                this.intervalPeriod = intervalPeriod;
                return this;
            }

            /**
             * <p>Private IP of the instance.</p>
             * 
             * <strong>example:</strong>
             * <p>10.68.<em>.</em></p>
             */
            public Builder intranetIp(String intranetIp) {
                this.intranetIp = intranetIp;
                return this;
            }

            /**
             * <p>IP segment range.</p>
             * 
             * <strong>example:</strong>
             * <p>192.168.1.0/24</p>
             */
            public Builder ipSegments(String ipSegments) {
                this.ipSegments = ipSegments;
                return this;
            }

            /**
             * <p>Linux port.</p>
             * 
             * <strong>example:</strong>
             * <p>22</p>
             */
            public Builder linuxPort(String linuxPort) {
                this.linuxPort = linuxPort;
                return this;
            }

            /**
             * <p>The unit of the scan period, with values:</p>
             * <ul>
             * <li><strong>day</strong>: day.</li>
             * <li><strong>hour</strong>: hour.</li>
             * </ul>
             * 
             * <strong>example:</strong>
             * <p>day</p>
             */
            public Builder periodUnit(String periodUnit) {
                this.periodUnit = periodUnit;
                return this;
            }

            /**
             * <p>Probe service status. Values:</p>
             * <ul>
             * <li><strong>0</strong>: Active</li>
             * <li><strong>1</strong>: Inactive</li>
             * </ul>
             * 
             * <strong>example:</strong>
             * <p>0</p>
             */
            public Builder serviceStatus(Integer serviceStatus) {
                this.serviceStatus = serviceStatus;
                return this;
            }

            /**
             * <p>Probe status. Values:</p>
             * <ul>
             * <li><strong>0</strong>: Enabled</li>
             * <li><strong>1</strong>: Disabled</li>
             * </ul>
             * 
             * <strong>example:</strong>
             * <p>0</p>
             */
            public Builder status(Integer status) {
                this.status = status;
                return this;
            }

            /**
             * <p>Server UUID.</p>
             * 
             * <strong>example:</strong>
             * <p>inet-eae02b9a-1dbd-44a6-844c-69072b27****</p>
             */
            public Builder uuid(String uuid) {
                this.uuid = uuid;
                return this;
            }

            /**
             * <p>Windows port.</p>
             * 
             * <strong>example:</strong>
             * <p>3389</p>
             */
            public Builder winPort(String winPort) {
                this.winPort = winPort;
                return this;
            }

            public IdcProbes build() {
                return new IdcProbes(this);
            } 

        } 

    }
    /**
     * 
     * {@link DescribeIdcProbeListResponseBody} extends {@link TeaModel}
     *
     * <p>DescribeIdcProbeListResponseBody</p>
     */
    public static class PageInfo extends TeaModel {
        @com.aliyun.core.annotation.NameInMap("Count")
        private Integer count;

        @com.aliyun.core.annotation.NameInMap("CurrentPage")
        private Integer currentPage;

        @com.aliyun.core.annotation.NameInMap("PageSize")
        private Integer pageSize;

        @com.aliyun.core.annotation.NameInMap("TotalCount")
        private Integer totalCount;

        private PageInfo(Builder builder) {
            this.count = builder.count;
            this.currentPage = builder.currentPage;
            this.pageSize = builder.pageSize;
            this.totalCount = builder.totalCount;
        }

        public static Builder builder() {
            return new Builder();
        }

        public static PageInfo create() {
            return builder().build();
        }

        /**
         * @return count
         */
        public Integer getCount() {
            return this.count;
        }

        /**
         * @return currentPage
         */
        public Integer getCurrentPage() {
            return this.currentPage;
        }

        /**
         * @return pageSize
         */
        public Integer getPageSize() {
            return this.pageSize;
        }

        /**
         * @return totalCount
         */
        public Integer getTotalCount() {
            return this.totalCount;
        }

        public static final class Builder {
            private Integer count; 
            private Integer currentPage; 
            private Integer pageSize; 
            private Integer totalCount; 

            /**
             * <p>The number of data entries displayed on the current page in a paginated query.</p>
             * 
             * <strong>example:</strong>
             * <p>17</p>
             */
            public Builder count(Integer count) {
                this.count = count;
                return this;
            }

            /**
             * <p>The page number in a paginated query.</p>
             * 
             * <strong>example:</strong>
             * <p>1</p>
             */
            public Builder currentPage(Integer currentPage) {
                this.currentPage = currentPage;
                return this;
            }

            /**
             * <p>The maximum number of data entries to display per page in a paginated query.</p>
             * 
             * <strong>example:</strong>
             * <p>20</p>
             */
            public Builder pageSize(Integer pageSize) {
                this.pageSize = pageSize;
                return this;
            }

            /**
             * <p>Total number of entries.</p>
             * 
             * <strong>example:</strong>
             * <p>30</p>
             */
            public Builder totalCount(Integer totalCount) {
                this.totalCount = totalCount;
                return this;
            }

            public PageInfo build() {
                return new PageInfo(this);
            } 

        } 

    }
}
