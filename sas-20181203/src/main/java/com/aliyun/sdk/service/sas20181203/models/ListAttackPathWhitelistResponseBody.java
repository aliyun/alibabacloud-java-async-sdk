// This file is auto-generated, don't edit it. Thanks.
package com.aliyun.sdk.service.sas20181203.models;

import com.aliyun.sdk.gateway.pop.*;
import darabonba.core.*;
import darabonba.core.async.*;
import darabonba.core.sync.*;
import darabonba.core.client.*;
import darabonba.core.RequestModel;
import darabonba.core.TeaModel;
import com.aliyun.sdk.gateway.pop.models.*;

/**
 * 
 * {@link ListAttackPathWhitelistResponseBody} extends {@link TeaModel}
 *
 * <p>ListAttackPathWhitelistResponseBody</p>
 */
public class ListAttackPathWhitelistResponseBody extends TeaModel {
    @com.aliyun.core.annotation.NameInMap("AttackPathWhitelistList")
    private java.util.List<AttackPathWhitelistList> attackPathWhitelistList;

    @com.aliyun.core.annotation.NameInMap("PageInfo")
    private PageInfo pageInfo;

    @com.aliyun.core.annotation.NameInMap("RequestId")
    private String requestId;

    private ListAttackPathWhitelistResponseBody(Builder builder) {
        this.attackPathWhitelistList = builder.attackPathWhitelistList;
        this.pageInfo = builder.pageInfo;
        this.requestId = builder.requestId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static ListAttackPathWhitelistResponseBody create() {
        return builder().build();
    }

    public Builder toBuilder() {
        return new Builder(this);
    }

    /**
     * @return attackPathWhitelistList
     */
    public java.util.List<AttackPathWhitelistList> getAttackPathWhitelistList() {
        return this.attackPathWhitelistList;
    }

    /**
     * @return pageInfo
     */
    public PageInfo getPageInfo() {
        return this.pageInfo;
    }

    /**
     * @return requestId
     */
    public String getRequestId() {
        return this.requestId;
    }

    public static final class Builder {
        private java.util.List<AttackPathWhitelistList> attackPathWhitelistList; 
        private PageInfo pageInfo; 
        private String requestId; 

        private Builder() {
        } 

        private Builder(ListAttackPathWhitelistResponseBody model) {
            this.attackPathWhitelistList = model.attackPathWhitelistList;
            this.pageInfo = model.pageInfo;
            this.requestId = model.requestId;
        } 

        /**
         * <p>List of attack path whitelists.</p>
         */
        public Builder attackPathWhitelistList(java.util.List<AttackPathWhitelistList> attackPathWhitelistList) {
            this.attackPathWhitelistList = attackPathWhitelistList;
            return this;
        }

        /**
         * <p>Page information for paginated queries.</p>
         */
        public Builder pageInfo(PageInfo pageInfo) {
            this.pageInfo = pageInfo;
            return this;
        }

        /**
         * <p>The ID of this request, which is a unique identifier generated by Alibaba Cloud for the request and can be used for troubleshooting and problem localization.</p>
         * 
         * <strong>example:</strong>
         * <p>89AD16CC-97EE-50F3-9B12-9E28E5C8****</p>
         */
        public Builder requestId(String requestId) {
            this.requestId = requestId;
            return this;
        }

        public ListAttackPathWhitelistResponseBody build() {
            return new ListAttackPathWhitelistResponseBody(this);
        } 

    } 

    /**
     * 
     * {@link ListAttackPathWhitelistResponseBody} extends {@link TeaModel}
     *
     * <p>ListAttackPathWhitelistResponseBody</p>
     */
    public static class AttackPathWhitelistList extends TeaModel {
        @com.aliyun.core.annotation.NameInMap("AttackPathWhitelistId")
        private String attackPathWhitelistId;

        @com.aliyun.core.annotation.NameInMap("LastModifiedTimestamp")
        private Long lastModifiedTimestamp;

        @com.aliyun.core.annotation.NameInMap("PathName")
        private String pathName;

        @com.aliyun.core.annotation.NameInMap("PathType")
        private String pathType;

        @com.aliyun.core.annotation.NameInMap("Remark")
        private String remark;

        @com.aliyun.core.annotation.NameInMap("WhitelistName")
        private String whitelistName;

        @com.aliyun.core.annotation.NameInMap("WhitelistType")
        private String whitelistType;

        private AttackPathWhitelistList(Builder builder) {
            this.attackPathWhitelistId = builder.attackPathWhitelistId;
            this.lastModifiedTimestamp = builder.lastModifiedTimestamp;
            this.pathName = builder.pathName;
            this.pathType = builder.pathType;
            this.remark = builder.remark;
            this.whitelistName = builder.whitelistName;
            this.whitelistType = builder.whitelistType;
        }

        public static Builder builder() {
            return new Builder();
        }

        public static AttackPathWhitelistList create() {
            return builder().build();
        }

        /**
         * @return attackPathWhitelistId
         */
        public String getAttackPathWhitelistId() {
            return this.attackPathWhitelistId;
        }

        /**
         * @return lastModifiedTimestamp
         */
        public Long getLastModifiedTimestamp() {
            return this.lastModifiedTimestamp;
        }

        /**
         * @return pathName
         */
        public String getPathName() {
            return this.pathName;
        }

        /**
         * @return pathType
         */
        public String getPathType() {
            return this.pathType;
        }

        /**
         * @return remark
         */
        public String getRemark() {
            return this.remark;
        }

        /**
         * @return whitelistName
         */
        public String getWhitelistName() {
            return this.whitelistName;
        }

        /**
         * @return whitelistType
         */
        public String getWhitelistType() {
            return this.whitelistType;
        }

        public static final class Builder {
            private String attackPathWhitelistId; 
            private Long lastModifiedTimestamp; 
            private String pathName; 
            private String pathType; 
            private String remark; 
            private String whitelistName; 
            private String whitelistType; 

            private Builder() {
            } 

            private Builder(AttackPathWhitelistList model) {
                this.attackPathWhitelistId = model.attackPathWhitelistId;
                this.lastModifiedTimestamp = model.lastModifiedTimestamp;
                this.pathName = model.pathName;
                this.pathType = model.pathType;
                this.remark = model.remark;
                this.whitelistName = model.whitelistName;
                this.whitelistType = model.whitelistType;
            } 

            /**
             * <p>Attack path whitelist ID.</p>
             * 
             * <strong>example:</strong>
             * <p>apwl-b33dec0acf9b42aabde032d656c0****</p>
             */
            public Builder attackPathWhitelistId(String attackPathWhitelistId) {
                this.attackPathWhitelistId = attackPathWhitelistId;
                return this;
            }

            /**
             * <p>Timestamp of the last modification, in milliseconds.</p>
             * 
             * <strong>example:</strong>
             * <p>1731897750000</p>
             */
            public Builder lastModifiedTimestamp(Long lastModifiedTimestamp) {
                this.lastModifiedTimestamp = lastModifiedTimestamp;
                return this;
            }

            /**
             * <p>Path name.</p>
             * 
             * <strong>example:</strong>
             * <p>ecs_get_credential_by_create_login_profile</p>
             */
            public Builder pathName(String pathName) {
                this.pathName = pathName;
                return this;
            }

            /**
             * <p>Path type.</p>
             * 
             * <strong>example:</strong>
             * <p>role_escalation</p>
             */
            public Builder pathType(String pathType) {
                this.pathType = pathType;
                return this;
            }

            /**
             * <p>Remark.</p>
             * 
             * <strong>example:</strong>
             * <p>test</p>
             */
            public Builder remark(String remark) {
                this.remark = remark;
                return this;
            }

            /**
             * <p>Whitelist name.</p>
             * 
             * <strong>example:</strong>
             * <p>test</p>
             */
            public Builder whitelistName(String whitelistName) {
                this.whitelistName = whitelistName;
                return this;
            }

            /**
             * <p>Whitelist type.</p>
             * 
             * <strong>example:</strong>
             * <p>PART_ASSET</p>
             */
            public Builder whitelistType(String whitelistType) {
                this.whitelistType = whitelistType;
                return this;
            }

            public AttackPathWhitelistList build() {
                return new AttackPathWhitelistList(this);
            } 

        } 

    }
    /**
     * 
     * {@link ListAttackPathWhitelistResponseBody} extends {@link TeaModel}
     *
     * <p>ListAttackPathWhitelistResponseBody</p>
     */
    public static class PageInfo extends TeaModel {
        @com.aliyun.core.annotation.NameInMap("Count")
        private Integer count;

        @com.aliyun.core.annotation.NameInMap("CurrentPage")
        private Integer currentPage;

        @com.aliyun.core.annotation.NameInMap("PageSize")
        private Integer pageSize;

        @com.aliyun.core.annotation.NameInMap("TotalCount")
        private Integer totalCount;

        private PageInfo(Builder builder) {
            this.count = builder.count;
            this.currentPage = builder.currentPage;
            this.pageSize = builder.pageSize;
            this.totalCount = builder.totalCount;
        }

        public static Builder builder() {
            return new Builder();
        }

        public static PageInfo create() {
            return builder().build();
        }

        /**
         * @return count
         */
        public Integer getCount() {
            return this.count;
        }

        /**
         * @return currentPage
         */
        public Integer getCurrentPage() {
            return this.currentPage;
        }

        /**
         * @return pageSize
         */
        public Integer getPageSize() {
            return this.pageSize;
        }

        /**
         * @return totalCount
         */
        public Integer getTotalCount() {
            return this.totalCount;
        }

        public static final class Builder {
            private Integer count; 
            private Integer currentPage; 
            private Integer pageSize; 
            private Integer totalCount; 

            private Builder() {
            } 

            private Builder(PageInfo model) {
                this.count = model.count;
                this.currentPage = model.currentPage;
                this.pageSize = model.pageSize;
                this.totalCount = model.totalCount;
            } 

            /**
             * <p>Number of items displayed on the current page in a paginated query.</p>
             * 
             * <strong>example:</strong>
             * <p>20</p>
             */
            public Builder count(Integer count) {
                this.count = count;
                return this;
            }

            /**
             * <p>Current page number in a paginated query.</p>
             * 
             * <strong>example:</strong>
             * <p>1</p>
             */
            public Builder currentPage(Integer currentPage) {
                this.currentPage = currentPage;
                return this;
            }

            /**
             * <p>Number of items per page in the returned data.</p>
             * 
             * <strong>example:</strong>
             * <p>20</p>
             */
            public Builder pageSize(Integer pageSize) {
                this.pageSize = pageSize;
                return this;
            }

            /**
             * <p>Total number of items.</p>
             * 
             * <strong>example:</strong>
             * <p>49</p>
             */
            public Builder totalCount(Integer totalCount) {
                this.totalCount = totalCount;
                return this;
            }

            public PageInfo build() {
                return new PageInfo(this);
            } 

        } 

    }
}
