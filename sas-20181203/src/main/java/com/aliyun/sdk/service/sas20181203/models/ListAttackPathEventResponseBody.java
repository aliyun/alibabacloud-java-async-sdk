// This file is auto-generated, don't edit it. Thanks.
package com.aliyun.sdk.service.sas20181203.models;

import com.aliyun.sdk.gateway.pop.*;
import darabonba.core.*;
import darabonba.core.async.*;
import darabonba.core.sync.*;
import darabonba.core.client.*;
import darabonba.core.RequestModel;
import darabonba.core.TeaModel;
import com.aliyun.sdk.gateway.pop.models.*;

/**
 * 
 * {@link ListAttackPathEventResponseBody} extends {@link TeaModel}
 *
 * <p>ListAttackPathEventResponseBody</p>
 */
public class ListAttackPathEventResponseBody extends TeaModel {
    @com.aliyun.core.annotation.NameInMap("AttackPathEventList")
    private java.util.List<AttackPathEventList> attackPathEventList;

    @com.aliyun.core.annotation.NameInMap("PageInfo")
    private PageInfo pageInfo;

    @com.aliyun.core.annotation.NameInMap("RequestId")
    private String requestId;

    private ListAttackPathEventResponseBody(Builder builder) {
        this.attackPathEventList = builder.attackPathEventList;
        this.pageInfo = builder.pageInfo;
        this.requestId = builder.requestId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static ListAttackPathEventResponseBody create() {
        return builder().build();
    }

    public Builder toBuilder() {
        return new Builder(this);
    }

    /**
     * @return attackPathEventList
     */
    public java.util.List<AttackPathEventList> getAttackPathEventList() {
        return this.attackPathEventList;
    }

    /**
     * @return pageInfo
     */
    public PageInfo getPageInfo() {
        return this.pageInfo;
    }

    /**
     * @return requestId
     */
    public String getRequestId() {
        return this.requestId;
    }

    public static final class Builder {
        private java.util.List<AttackPathEventList> attackPathEventList; 
        private PageInfo pageInfo; 
        private String requestId; 

        private Builder() {
        } 

        private Builder(ListAttackPathEventResponseBody model) {
            this.attackPathEventList = model.attackPathEventList;
            this.pageInfo = model.pageInfo;
            this.requestId = model.requestId;
        } 

        /**
         * <p>List of attack path events.</p>
         */
        public Builder attackPathEventList(java.util.List<AttackPathEventList> attackPathEventList) {
            this.attackPathEventList = attackPathEventList;
            return this;
        }

        /**
         * <p>Pagination information.</p>
         */
        public Builder pageInfo(PageInfo pageInfo) {
            this.pageInfo = pageInfo;
            return this;
        }

        /**
         * <p>The ID of this request, which is a unique identifier generated by Alibaba Cloud for the request. It can be used for troubleshooting and problem localization.</p>
         * 
         * <strong>example:</strong>
         * <p>3956048F-9D73-5EDB-834B-4827BB48****</p>
         */
        public Builder requestId(String requestId) {
            this.requestId = requestId;
            return this;
        }

        public ListAttackPathEventResponseBody build() {
            return new ListAttackPathEventResponseBody(this);
        } 

    } 

    /**
     * 
     * {@link ListAttackPathEventResponseBody} extends {@link TeaModel}
     *
     * <p>ListAttackPathEventResponseBody</p>
     */
    public static class DstAsset extends TeaModel {
        @com.aliyun.core.annotation.NameInMap("AssetSubType")
        private Integer assetSubType;

        @com.aliyun.core.annotation.NameInMap("AssetType")
        private Integer assetType;

        @com.aliyun.core.annotation.NameInMap("InstanceId")
        private String instanceId;

        @com.aliyun.core.annotation.NameInMap("InstanceName")
        private String instanceName;

        @com.aliyun.core.annotation.NameInMap("RegionId")
        private String regionId;

        @com.aliyun.core.annotation.NameInMap("SensitiveAssetFlag")
        private Integer sensitiveAssetFlag;

        @com.aliyun.core.annotation.NameInMap("Vendor")
        private Integer vendor;

        private DstAsset(Builder builder) {
            this.assetSubType = builder.assetSubType;
            this.assetType = builder.assetType;
            this.instanceId = builder.instanceId;
            this.instanceName = builder.instanceName;
            this.regionId = builder.regionId;
            this.sensitiveAssetFlag = builder.sensitiveAssetFlag;
            this.vendor = builder.vendor;
        }

        public static Builder builder() {
            return new Builder();
        }

        public static DstAsset create() {
            return builder().build();
        }

        /**
         * @return assetSubType
         */
        public Integer getAssetSubType() {
            return this.assetSubType;
        }

        /**
         * @return assetType
         */
        public Integer getAssetType() {
            return this.assetType;
        }

        /**
         * @return instanceId
         */
        public String getInstanceId() {
            return this.instanceId;
        }

        /**
         * @return instanceName
         */
        public String getInstanceName() {
            return this.instanceName;
        }

        /**
         * @return regionId
         */
        public String getRegionId() {
            return this.regionId;
        }

        /**
         * @return sensitiveAssetFlag
         */
        public Integer getSensitiveAssetFlag() {
            return this.sensitiveAssetFlag;
        }

        /**
         * @return vendor
         */
        public Integer getVendor() {
            return this.vendor;
        }

        public static final class Builder {
            private Integer assetSubType; 
            private Integer assetType; 
            private String instanceId; 
            private String instanceName; 
            private String regionId; 
            private Integer sensitiveAssetFlag; 
            private Integer vendor; 

            private Builder() {
            } 

            private Builder(DstAsset model) {
                this.assetSubType = model.assetSubType;
                this.assetType = model.assetType;
                this.instanceId = model.instanceId;
                this.instanceName = model.instanceName;
                this.regionId = model.regionId;
                this.sensitiveAssetFlag = model.sensitiveAssetFlag;
                this.vendor = model.vendor;
            } 

            /**
             * <p>Subtype of the cloud product asset.</p>
             * 
             * <strong>example:</strong>
             * <p>0</p>
             */
            public Builder assetSubType(Integer assetSubType) {
                this.assetSubType = assetSubType;
                return this;
            }

            /**
             * <p>Type of the cloud product asset.</p>
             * 
             * <strong>example:</strong>
             * <p>1</p>
             */
            public Builder assetType(Integer assetType) {
                this.assetType = assetType;
                return this;
            }

            /**
             * <p>ID of the cloud product asset instance.</p>
             * 
             * <strong>example:</strong>
             * <p>i-uf6a1tt9umxwoxqn****</p>
             */
            public Builder instanceId(String instanceId) {
                this.instanceId = instanceId;
                return this;
            }

            /**
             * <p>Instance name.</p>
             * 
             * <strong>example:</strong>
             * <p>test</p>
             */
            public Builder instanceName(String instanceName) {
                this.instanceName = instanceName;
                return this;
            }

            /**
             * <p>ID of the region where the cloud product asset instance is located.</p>
             * 
             * <strong>example:</strong>
             * <p>cn-hangzhou</p>
             */
            public Builder regionId(String regionId) {
                this.regionId = regionId;
                return this;
            }

            /**
             * <p>Sensitive asset flag. Values:</p>
             * <ul>
             * <li><strong>0</strong>: Non-sensitive asset.</li>
             * <li><strong>1</strong>: Sensitive asset.</li>
             * </ul>
             * 
             * <strong>example:</strong>
             * <p>1</p>
             */
            public Builder sensitiveAssetFlag(Integer sensitiveAssetFlag) {
                this.sensitiveAssetFlag = sensitiveAssetFlag;
                return this;
            }

            /**
             * <p>Vendor of the cloud product asset.</p>
             * 
             * <strong>example:</strong>
             * <p>0</p>
             */
            public Builder vendor(Integer vendor) {
                this.vendor = vendor;
                return this;
            }

            public DstAsset build() {
                return new DstAsset(this);
            } 

        } 

    }
    /**
     * 
     * {@link ListAttackPathEventResponseBody} extends {@link TeaModel}
     *
     * <p>ListAttackPathEventResponseBody</p>
     */
    public static class SrcAsset extends TeaModel {
        @com.aliyun.core.annotation.NameInMap("AssetSubType")
        private Integer assetSubType;

        @com.aliyun.core.annotation.NameInMap("AssetType")
        private Integer assetType;

        @com.aliyun.core.annotation.NameInMap("InstanceId")
        private String instanceId;

        @com.aliyun.core.annotation.NameInMap("InstanceName")
        private String instanceName;

        @com.aliyun.core.annotation.NameInMap("RegionId")
        private String regionId;

        @com.aliyun.core.annotation.NameInMap("SensitiveAssetFlag")
        private Integer sensitiveAssetFlag;

        @com.aliyun.core.annotation.NameInMap("Vendor")
        private Integer vendor;

        private SrcAsset(Builder builder) {
            this.assetSubType = builder.assetSubType;
            this.assetType = builder.assetType;
            this.instanceId = builder.instanceId;
            this.instanceName = builder.instanceName;
            this.regionId = builder.regionId;
            this.sensitiveAssetFlag = builder.sensitiveAssetFlag;
            this.vendor = builder.vendor;
        }

        public static Builder builder() {
            return new Builder();
        }

        public static SrcAsset create() {
            return builder().build();
        }

        /**
         * @return assetSubType
         */
        public Integer getAssetSubType() {
            return this.assetSubType;
        }

        /**
         * @return assetType
         */
        public Integer getAssetType() {
            return this.assetType;
        }

        /**
         * @return instanceId
         */
        public String getInstanceId() {
            return this.instanceId;
        }

        /**
         * @return instanceName
         */
        public String getInstanceName() {
            return this.instanceName;
        }

        /**
         * @return regionId
         */
        public String getRegionId() {
            return this.regionId;
        }

        /**
         * @return sensitiveAssetFlag
         */
        public Integer getSensitiveAssetFlag() {
            return this.sensitiveAssetFlag;
        }

        /**
         * @return vendor
         */
        public Integer getVendor() {
            return this.vendor;
        }

        public static final class Builder {
            private Integer assetSubType; 
            private Integer assetType; 
            private String instanceId; 
            private String instanceName; 
            private String regionId; 
            private Integer sensitiveAssetFlag; 
            private Integer vendor; 

            private Builder() {
            } 

            private Builder(SrcAsset model) {
                this.assetSubType = model.assetSubType;
                this.assetType = model.assetType;
                this.instanceId = model.instanceId;
                this.instanceName = model.instanceName;
                this.regionId = model.regionId;
                this.sensitiveAssetFlag = model.sensitiveAssetFlag;
                this.vendor = model.vendor;
            } 

            /**
             * <p>Subtype of the cloud product asset.</p>
             * 
             * <strong>example:</strong>
             * <p>1</p>
             */
            public Builder assetSubType(Integer assetSubType) {
                this.assetSubType = assetSubType;
                return this;
            }

            /**
             * <p>Type of the cloud product asset.</p>
             * 
             * <strong>example:</strong>
             * <p>0</p>
             */
            public Builder assetType(Integer assetType) {
                this.assetType = assetType;
                return this;
            }

            /**
             * <p>ID of the cloud product asset instance.</p>
             * 
             * <strong>example:</strong>
             * <p>i-bp18ifsr1tu1dx39****</p>
             */
            public Builder instanceId(String instanceId) {
                this.instanceId = instanceId;
                return this;
            }

            /**
             * <p>Instance name.</p>
             * 
             * <strong>example:</strong>
             * <p>test</p>
             */
            public Builder instanceName(String instanceName) {
                this.instanceName = instanceName;
                return this;
            }

            /**
             * <p>ID of the region where the cloud product asset instance is located.</p>
             * 
             * <strong>example:</strong>
             * <p>cn-hangzhou</p>
             */
            public Builder regionId(String regionId) {
                this.regionId = regionId;
                return this;
            }

            /**
             * <p>Sensitive asset flag. Values:</p>
             * <ul>
             * <li><strong>0</strong>: Non-sensitive asset.</li>
             * <li><strong>1</strong>: Sensitive asset.</li>
             * </ul>
             * 
             * <strong>example:</strong>
             * <p>0</p>
             */
            public Builder sensitiveAssetFlag(Integer sensitiveAssetFlag) {
                this.sensitiveAssetFlag = sensitiveAssetFlag;
                return this;
            }

            /**
             * <p>Vendor of the cloud product asset.</p>
             * 
             * <strong>example:</strong>
             * <p>0</p>
             */
            public Builder vendor(Integer vendor) {
                this.vendor = vendor;
                return this;
            }

            public SrcAsset build() {
                return new SrcAsset(this);
            } 

        } 

    }
    /**
     * 
     * {@link ListAttackPathEventResponseBody} extends {@link TeaModel}
     *
     * <p>ListAttackPathEventResponseBody</p>
     */
    public static class AttackPathEventList extends TeaModel {
        @com.aliyun.core.annotation.NameInMap("DstAsset")
        private DstAsset dstAsset;

        @com.aliyun.core.annotation.NameInMap("EventId")
        private Long eventId;

        @com.aliyun.core.annotation.NameInMap("LastTime")
        private Long lastTime;

        @com.aliyun.core.annotation.NameInMap("PathName")
        private String pathName;

        @com.aliyun.core.annotation.NameInMap("PathNameDesc")
        private String pathNameDesc;

        @com.aliyun.core.annotation.NameInMap("PathType")
        private String pathType;

        @com.aliyun.core.annotation.NameInMap("PathTypeDesc")
        private String pathTypeDesc;

        @com.aliyun.core.annotation.NameInMap("RiskLevel")
        private String riskLevel;

        @com.aliyun.core.annotation.NameInMap("SrcAsset")
        private SrcAsset srcAsset;

        private AttackPathEventList(Builder builder) {
            this.dstAsset = builder.dstAsset;
            this.eventId = builder.eventId;
            this.lastTime = builder.lastTime;
            this.pathName = builder.pathName;
            this.pathNameDesc = builder.pathNameDesc;
            this.pathType = builder.pathType;
            this.pathTypeDesc = builder.pathTypeDesc;
            this.riskLevel = builder.riskLevel;
            this.srcAsset = builder.srcAsset;
        }

        public static Builder builder() {
            return new Builder();
        }

        public static AttackPathEventList create() {
            return builder().build();
        }

        /**
         * @return dstAsset
         */
        public DstAsset getDstAsset() {
            return this.dstAsset;
        }

        /**
         * @return eventId
         */
        public Long getEventId() {
            return this.eventId;
        }

        /**
         * @return lastTime
         */
        public Long getLastTime() {
            return this.lastTime;
        }

        /**
         * @return pathName
         */
        public String getPathName() {
            return this.pathName;
        }

        /**
         * @return pathNameDesc
         */
        public String getPathNameDesc() {
            return this.pathNameDesc;
        }

        /**
         * @return pathType
         */
        public String getPathType() {
            return this.pathType;
        }

        /**
         * @return pathTypeDesc
         */
        public String getPathTypeDesc() {
            return this.pathTypeDesc;
        }

        /**
         * @return riskLevel
         */
        public String getRiskLevel() {
            return this.riskLevel;
        }

        /**
         * @return srcAsset
         */
        public SrcAsset getSrcAsset() {
            return this.srcAsset;
        }

        public static final class Builder {
            private DstAsset dstAsset; 
            private Long eventId; 
            private Long lastTime; 
            private String pathName; 
            private String pathNameDesc; 
            private String pathType; 
            private String pathTypeDesc; 
            private String riskLevel; 
            private SrcAsset srcAsset; 

            private Builder() {
            } 

            private Builder(AttackPathEventList model) {
                this.dstAsset = model.dstAsset;
                this.eventId = model.eventId;
                this.lastTime = model.lastTime;
                this.pathName = model.pathName;
                this.pathNameDesc = model.pathNameDesc;
                this.pathType = model.pathType;
                this.pathTypeDesc = model.pathTypeDesc;
                this.riskLevel = model.riskLevel;
                this.srcAsset = model.srcAsset;
            } 

            /**
             * <p>Destination asset.</p>
             */
            public Builder dstAsset(DstAsset dstAsset) {
                this.dstAsset = dstAsset;
                return this;
            }

            /**
             * <p>The ID of the alert event.</p>
             * 
             * <strong>example:</strong>
             * <p>123</p>
             */
            public Builder eventId(Long eventId) {
                this.eventId = eventId;
                return this;
            }

            /**
             * <p>Timestamp of the latest discovery. Unit: milliseconds.</p>
             * 
             * <strong>example:</strong>
             * <p>1742869699000</p>
             */
            public Builder lastTime(Long lastTime) {
                this.lastTime = lastTime;
                return this;
            }

            /**
             * <p>Path name.</p>
             * 
             * <strong>example:</strong>
             * <p>ecs_get_credential_by_create_login_profile</p>
             */
            public Builder pathName(String pathName) {
                this.pathName = pathName;
                return this;
            }

            /**
             * <p>Description of the path name.</p>
             * 
             * <strong>example:</strong>
             * <p>ECS Instance Can Obtain Long-term Access Credential by Enabling Console Logon for RAM User</p>
             */
            public Builder pathNameDesc(String pathNameDesc) {
                this.pathNameDesc = pathNameDesc;
                return this;
            }

            /**
             * <p>Path type.</p>
             * 
             * <strong>example:</strong>
             * <p>role_escalation</p>
             */
            public Builder pathType(String pathType) {
                this.pathType = pathType;
                return this;
            }

            /**
             * <p>Description of the path type.</p>
             * 
             * <strong>example:</strong>
             * <p>Privilege Escalation by Role</p>
             */
            public Builder pathTypeDesc(String pathTypeDesc) {
                this.pathTypeDesc = pathTypeDesc;
                return this;
            }

            /**
             * <p>Risk level.</p>
             * 
             * <strong>example:</strong>
             * <p>suspicious</p>
             */
            public Builder riskLevel(String riskLevel) {
                this.riskLevel = riskLevel;
                return this;
            }

            /**
             * <p>Source asset.</p>
             */
            public Builder srcAsset(SrcAsset srcAsset) {
                this.srcAsset = srcAsset;
                return this;
            }

            public AttackPathEventList build() {
                return new AttackPathEventList(this);
            } 

        } 

    }
    /**
     * 
     * {@link ListAttackPathEventResponseBody} extends {@link TeaModel}
     *
     * <p>ListAttackPathEventResponseBody</p>
     */
    public static class PageInfo extends TeaModel {
        @com.aliyun.core.annotation.NameInMap("Count")
        private Integer count;

        @com.aliyun.core.annotation.NameInMap("CurrentPage")
        private Integer currentPage;

        @com.aliyun.core.annotation.NameInMap("PageSize")
        private Integer pageSize;

        @com.aliyun.core.annotation.NameInMap("TotalCount")
        private Integer totalCount;

        private PageInfo(Builder builder) {
            this.count = builder.count;
            this.currentPage = builder.currentPage;
            this.pageSize = builder.pageSize;
            this.totalCount = builder.totalCount;
        }

        public static Builder builder() {
            return new Builder();
        }

        public static PageInfo create() {
            return builder().build();
        }

        /**
         * @return count
         */
        public Integer getCount() {
            return this.count;
        }

        /**
         * @return currentPage
         */
        public Integer getCurrentPage() {
            return this.currentPage;
        }

        /**
         * @return pageSize
         */
        public Integer getPageSize() {
            return this.pageSize;
        }

        /**
         * @return totalCount
         */
        public Integer getTotalCount() {
            return this.totalCount;
        }

        public static final class Builder {
            private Integer count; 
            private Integer currentPage; 
            private Integer pageSize; 
            private Integer totalCount; 

            private Builder() {
            } 

            private Builder(PageInfo model) {
                this.count = model.count;
                this.currentPage = model.currentPage;
                this.pageSize = model.pageSize;
                this.totalCount = model.totalCount;
            } 

            /**
             * <p>The number of data entries displayed on the current page when performing a paginated query.</p>
             * 
             * <strong>example:</strong>
             * <p>20</p>
             */
            public Builder count(Integer count) {
                this.count = count;
                return this;
            }

            /**
             * <p>The page number displayed in the pagination query.</p>
             * 
             * <strong>example:</strong>
             * <p>1</p>
             */
            public Builder currentPage(Integer currentPage) {
                this.currentPage = currentPage;
                return this;
            }

            /**
             * <p>The number of data items displayed per page.</p>
             * 
             * <strong>example:</strong>
             * <p>20</p>
             */
            public Builder pageSize(Integer pageSize) {
                this.pageSize = pageSize;
                return this;
            }

            /**
             * <p>The total number of data items.</p>
             * 
             * <strong>example:</strong>
             * <p>30</p>
             */
            public Builder totalCount(Integer totalCount) {
                this.totalCount = totalCount;
                return this;
            }

            public PageInfo build() {
                return new PageInfo(this);
            } 

        } 

    }
}
